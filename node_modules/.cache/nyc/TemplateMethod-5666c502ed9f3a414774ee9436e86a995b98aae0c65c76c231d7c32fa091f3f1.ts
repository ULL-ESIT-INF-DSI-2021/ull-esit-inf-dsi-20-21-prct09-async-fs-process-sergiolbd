"use strict";/**
 * Patrón Template Method (Comportamiento)
 * Permite definir un esqueleto algorítmico en una superclase, de modo que
 * aquellas subclases que extiendan el comportamiento de dicho esqueleto puedan
 * sobreescribir algunos pasos del algorítmo sin modificar su estructura base
 *
 * Ventajas --> Respeta Open-closed
 * Destentajas --> No respeta Liskov Substitution
 */function cov_xkf76gf08(){var path="/home/sergio/Documentos/3\xBA Info/2\xBA Cuatri/DSI/mod2/src/TemplateMethod.ts";var hash="fa7389628d2370efb6175d86bf81a38425188778";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/home/sergio/Documentos/3\xBA Info/2\xBA Cuatri/DSI/mod2/src/TemplateMethod.ts",statementMap:{"0":{start:{line:11,column:0},end:{line:11,column:62}},"1":{start:{line:12,column:0},end:{line:12,column:64}},"2":{start:{line:18,column:8},end:{line:18,column:37}},"3":{start:{line:24,column:8},end:{line:24,column:28}},"4":{start:{line:25,column:8},end:{line:25,column:40}},"5":{start:{line:26,column:8},end:{line:26,column:27}},"6":{start:{line:36,column:8},end:{line:36,column:27}},"7":{start:{line:43,column:8},end:{line:43,column:31}},"8":{start:{line:51,column:21},end:{line:51,column:73}},"9":{start:{line:52,column:8},end:{line:54,column:9}},"10":{start:{line:52,column:21},end:{line:52,column:22}},"11":{start:{line:53,column:12},end:{line:53,column:58}},"12":{start:{line:55,column:8},end:{line:55,column:22}},"13":{start:{line:58,column:0},end:{line:58,column:24}},"14":{start:{line:64,column:8},end:{line:64,column:26}},"15":{start:{line:65,column:8},end:{line:65,column:37}},"16":{start:{line:74,column:8},end:{line:74,column:21}},"17":{start:{line:81,column:8},end:{line:81,column:42}},"18":{start:{line:88,column:8},end:{line:88,column:36}},"19":{start:{line:91,column:0},end:{line:91,column:30}},"20":{start:{line:97,column:8},end:{line:97,column:26}},"21":{start:{line:98,column:8},end:{line:98,column:37}},"22":{start:{line:107,column:8},end:{line:107,column:21}},"23":{start:{line:114,column:8},end:{line:114,column:42}},"24":{start:{line:121,column:8},end:{line:121,column:36}},"25":{start:{line:124,column:0},end:{line:124,column:30}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:17,column:4},end:{line:17,column:5}},loc:{start:{line:17,column:28},end:{line:19,column:5}},line:17},"1":{name:"(anonymous_1)",decl:{start:{line:23,column:4},end:{line:23,column:5}},loc:{start:{line:23,column:10},end:{line:30,column:5}},line:23},"2":{name:"(anonymous_2)",decl:{start:{line:35,column:4},end:{line:35,column:5}},loc:{start:{line:35,column:16},end:{line:37,column:5}},line:35},"3":{name:"(anonymous_3)",decl:{start:{line:42,column:4},end:{line:42,column:5}},loc:{start:{line:42,column:15},end:{line:44,column:5}},line:42},"4":{name:"(anonymous_4)",decl:{start:{line:50,column:4},end:{line:50,column:5}},loc:{start:{line:50,column:23},end:{line:56,column:5}},line:50},"5":{name:"(anonymous_5)",decl:{start:{line:63,column:4},end:{line:63,column:5}},loc:{start:{line:63,column:28},end:{line:66,column:5}},line:63},"6":{name:"(anonymous_6)",decl:{start:{line:73,column:4},end:{line:73,column:5}},loc:{start:{line:73,column:14},end:{line:75,column:5}},line:73},"7":{name:"(anonymous_7)",decl:{start:{line:80,column:4},end:{line:80,column:5}},loc:{start:{line:80,column:18},end:{line:82,column:5}},line:80},"8":{name:"(anonymous_8)",decl:{start:{line:87,column:4},end:{line:87,column:5}},loc:{start:{line:87,column:19},end:{line:89,column:5}},line:87},"9":{name:"(anonymous_9)",decl:{start:{line:96,column:4},end:{line:96,column:5}},loc:{start:{line:96,column:28},end:{line:99,column:5}},line:96},"10":{name:"(anonymous_10)",decl:{start:{line:106,column:4},end:{line:106,column:5}},loc:{start:{line:106,column:14},end:{line:108,column:5}},line:106},"11":{name:"(anonymous_11)",decl:{start:{line:113,column:4},end:{line:113,column:5}},loc:{start:{line:113,column:18},end:{line:115,column:5}},line:113},"12":{name:"(anonymous_12)",decl:{start:{line:120,column:4},end:{line:120,column:5}},loc:{start:{line:120,column:19},end:{line:122,column:5}},line:120}},branchMap:{"0":{loc:{start:{line:51,column:21},end:{line:51,column:73}},type:"cond-expr",locations:[{start:{line:51,column:45},end:{line:51,column:52}},{start:{line:51,column:55},end:{line:51,column:73}}],line:51}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},b:{"0":[0,0]},inputSourceMap:{version:3,file:"/home/sergio/Documentos/3\xBA Info/2\xBA Cuatri/DSI/mod2/src/TemplateMethod.ts",sources:["/home/sergio/Documentos/3\xBA Info/2\xBA Cuatri/DSI/mod2/src/TemplateMethod.ts"],names:[],mappings:";AAAA;;;;;;;;GAQG;;;AAEH;;GAEG;AACH,MAAsB,MAAM;IAE1B,YAAsB,UAAoB;QAApB,eAAU,GAAV,UAAU,CAAU;IAC1C,CAAC;IAED;;OAEG;IACI,GAAG;QACR,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;QAEhC,IAAI,CAAC,WAAW,EAAE,CAAC;QAEnB,uBAAuB;QACvB,mCAAmC;QAEnC,sBAAsB;IACxB,CAAC;IAED;;;OAGG;IACH,SAAS;QACP,OAAO,IAAI,CAAC,MAAM,CAAC;IACrB,CAAC;IAED;;;OAGG;IACH,QAAQ;QACN,OAAO,IAAI,CAAC,UAAU,CAAC;IACzB,CAAC;IAED;;;;OAIG;IACH,SAAS,CAAC,OAAe;QACvB,IAAI,MAAM,GAAG,OAAO,KAAK,SAAS,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;QAElE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC/C,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;SAC/C;QAED,OAAO,MAAM,CAAC;IAChB,CAAC;CAgBF;AAjED,wBAiEC;AAED;;GAEG;AACH,MAAa,SAAU,SAAQ,MAAM;IACnC,YAAsB,UAAoB;QACxC,KAAK,CAAC,UAAU,CAAC,CAAC;QADE,eAAU,GAAV,UAAU,CAAU;IAE1C,CAAC;IAED;;;;;OAKG;IACH,GAAG,CAAC,CAAS,EAAE,CAAQ;QACrB,OAAO,CAAC,GAAC,CAAC,CAAC;IACb,CAAC;IAED;;;OAGG;IACH,WAAW;QACT,OAAO,0BAA0B,CAAC;IACpC,CAAC;IAED;;;OAGG;IACH,YAAY;QACV,OAAO,oBAAoB,CAAC;IAC9B,CAAC;CACF;AA9BD,8BA8BC;AAED;;GAEG;AACH,MAAa,SAAU,SAAQ,MAAM;IACnC,YAAsB,UAAoB;QACxC,KAAK,CAAC,UAAU,CAAC,CAAC;QADE,eAAU,GAAV,UAAU,CAAU;IAE1C,CAAC;IAED;;;;;OAKG;IACH,GAAG,CAAC,CAAS,EAAE,CAAQ;QACrB,OAAO,CAAC,GAAC,CAAC,CAAC;IACb,CAAC;IAED;;;OAGG;IACH,WAAW;QACT,OAAO,0BAA0B,CAAC;IACpC,CAAC;IAED;;;OAGG;IACH,YAAY;QACV,OAAO,oBAAoB,CAAC;IAC9B,CAAC;CACF;AA9BD,8BA8BC",sourcesContent:["/**\n * Patr\xF3n Template Method (Comportamiento)\n * Permite definir un esqueleto algor\xEDtmico en una superclase, de modo que\n * aquellas subclases que extiendan el comportamiento de dicho esqueleto puedan\n * sobreescribir algunos pasos del algor\xEDtmo sin modificar su estructura base\n * \n * Ventajas --> Respeta Open-closed\n * Destentajas --> No respeta Liskov Substitution\n */\n\n/**\n * Clase Abstracta donde se define el metodo de plantilla\n */\nexport abstract class Reduce {\n  protected result: number;\n  constructor(protected inputArray: number[]) {\n  }\n\n  /**\n   * M\xE9todo de plantilla\n   */\n  public run() {\n    this.beforeReduce();\n    this.result = this.addReduce(0);\n\n    this.afterReduce();\n\n    // this.beforeReduce();\n    // this.result = this.addReduce(0);\n\n    // this.afterReduce();\n  }\n\n  /**\n   * Obtener el resultado de reduce\n   * @returns {string}\n   */\n  getResult() {\n    return this.result;\n  }\n\n  /**\n   * Obtner el array de entrada\n   * @returns {number[]}\n   */\n  getArray() {\n    return this.inputArray;\n  }\n\n  /**\n   * M\xE9todo Encargado de aplicar el addReduce\n   * @param {number} inicial posici\xF3n inicial\n   * @returns {number}\n   */\n  addReduce(inicial: number): number {\n    let result = inicial !== undefined ? inicial : this.inputArray[0];\n\n    for (let i = 0; i < this.inputArray.length; i++) {\n      result = this.add(result, this.inputArray[i]);\n    }\n\n    return result;\n  }\n\n  /**\n   * Hock\n   */\n  abstract afterReduce(): string;\n  abstract beforeReduce(): string;\n\n\n  /**\n   * M\xE9todo abstacto a definir en las clases hijas\n   * @param {number} a\n   * @param {number} b\n   */\n  abstract add(a: number, b:number): number;\n\n}\n\n/**\n * Clase hija encargada de hacer una suma de los elementos de un array\n */\nexport class AddReduce extends Reduce {\n  constructor(protected inputArray: number[]) {\n    super(inputArray);\n  }\n\n  /**\n   * Suma de dos elementos\n   * @param {number} a \n   * @param {number} b \n   * @returns {number}\n   */\n  add(a: number, b:number) {\n    return a+b;\n  }\n\n  /**\n   * M\xE9todo Hock\n   * @returns {string}\n   */\n  afterReduce() {\n    return 'Vector reducido por suma';\n  }\n\n  /**\n   * M\xE9todo Hock\n   * @returns {string}\n   */\n  beforeReduce() {\n    return 'Comenzar AddRecuce';\n  }\n}\n\n/**\n * Clase hija encargada de hacer una suma de los elementos de un array\n */\nexport class SubReduce extends Reduce {\n  constructor(protected inputArray: number[]) {\n    super(inputArray);\n  }\n\n  /**\n   * Suma de dos elementos\n   * @param {number} a \n   * @param {number} b \n   * @returns {number}\n   */\n  add(a: number, b:number) {\n    return a-b;\n  }\n\n  /**\n   * M\xE9todo Hock\n   * @returns {string}\n   */\n  afterReduce() {\n    return 'Vector reducido por suma';\n  }\n\n  /**\n   * M\xE9todo Hock\n   * @returns {string}\n   */\n  beforeReduce() {\n    return 'Comenzar AddRecuce';\n  }\n}\n\n\n"]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"fa7389628d2370efb6175d86bf81a38425188778"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_xkf76gf08=function(){return actualCoverage;};}return actualCoverage;}cov_xkf76gf08();cov_xkf76gf08().s[0]++;Object.defineProperty(exports,"__esModule",{value:true});cov_xkf76gf08().s[1]++;exports.SubReduce=exports.AddReduce=exports.Reduce=void 0;/**
 * Clase Abstracta donde se define el metodo de plantilla
 */class Reduce{constructor(inputArray){cov_xkf76gf08().f[0]++;cov_xkf76gf08().s[2]++;this.inputArray=inputArray;}/**
     * Método de plantilla
     */run(){cov_xkf76gf08().f[1]++;cov_xkf76gf08().s[3]++;this.beforeReduce();cov_xkf76gf08().s[4]++;this.result=this.addReduce(0);cov_xkf76gf08().s[5]++;this.afterReduce();// this.beforeReduce();
// this.result = this.addReduce(0);
// this.afterReduce();
}/**
     * Obtener el resultado de reduce
     * @returns {string}
     */getResult(){cov_xkf76gf08().f[2]++;cov_xkf76gf08().s[6]++;return this.result;}/**
     * Obtner el array de entrada
     * @returns {number[]}
     */getArray(){cov_xkf76gf08().f[3]++;cov_xkf76gf08().s[7]++;return this.inputArray;}/**
     * Método Encargado de aplicar el addReduce
     * @param {number} inicial posición inicial
     * @returns {number}
     */addReduce(inicial){cov_xkf76gf08().f[4]++;let result=(cov_xkf76gf08().s[8]++,inicial!==undefined?(cov_xkf76gf08().b[0][0]++,inicial):(cov_xkf76gf08().b[0][1]++,this.inputArray[0]));cov_xkf76gf08().s[9]++;for(let i=(cov_xkf76gf08().s[10]++,0);i<this.inputArray.length;i++){cov_xkf76gf08().s[11]++;result=this.add(result,this.inputArray[i]);}cov_xkf76gf08().s[12]++;return result;}}cov_xkf76gf08().s[13]++;exports.Reduce=Reduce;/**
 * Clase hija encargada de hacer una suma de los elementos de un array
 */class AddReduce extends Reduce{constructor(inputArray){cov_xkf76gf08().f[5]++;cov_xkf76gf08().s[14]++;super(inputArray);cov_xkf76gf08().s[15]++;this.inputArray=inputArray;}/**
     * Suma de dos elementos
     * @param {number} a
     * @param {number} b
     * @returns {number}
     */add(a,b){cov_xkf76gf08().f[6]++;cov_xkf76gf08().s[16]++;return a+b;}/**
     * Método Hock
     * @returns {string}
     */afterReduce(){cov_xkf76gf08().f[7]++;cov_xkf76gf08().s[17]++;return'Vector reducido por suma';}/**
     * Método Hock
     * @returns {string}
     */beforeReduce(){cov_xkf76gf08().f[8]++;cov_xkf76gf08().s[18]++;return'Comenzar AddRecuce';}}cov_xkf76gf08().s[19]++;exports.AddReduce=AddReduce;/**
 * Clase hija encargada de hacer una suma de los elementos de un array
 */class SubReduce extends Reduce{constructor(inputArray){cov_xkf76gf08().f[9]++;cov_xkf76gf08().s[20]++;super(inputArray);cov_xkf76gf08().s[21]++;this.inputArray=inputArray;}/**
     * Suma de dos elementos
     * @param {number} a
     * @param {number} b
     * @returns {number}
     */add(a,b){cov_xkf76gf08().f[10]++;cov_xkf76gf08().s[22]++;return a-b;}/**
     * Método Hock
     * @returns {string}
     */afterReduce(){cov_xkf76gf08().f[11]++;cov_xkf76gf08().s[23]++;return'Vector reducido por suma';}/**
     * Método Hock
     * @returns {string}
     */beforeReduce(){cov_xkf76gf08().f[12]++;cov_xkf76gf08().s[24]++;return'Comenzar AddRecuce';}}cov_xkf76gf08().s[25]++;exports.SubReduce=SubReduce;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiL2hvbWUvc2VyZ2lvL0RvY3VtZW50b3MvM8K6IEluZm8vMsK6IEN1YXRyaS9EU0kvbW9kMi9zcmMvVGVtcGxhdGVNZXRob2QudHMiLCJzb3VyY2VzIjpbIi9ob21lL3Nlcmdpby9Eb2N1bWVudG9zLzPCuiBJbmZvLzLCuiBDdWF0cmkvRFNJL21vZDIvc3JjL1RlbXBsYXRlTWV0aG9kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQTs7Ozs7Ozs7R0FRRzs7O0FBRUg7O0dBRUc7QUFDSCxNQUFzQixNQUFNO0lBRTFCLFlBQXNCLFVBQW9CO1FBQXBCLGVBQVUsR0FBVixVQUFVLENBQVU7SUFDMUMsQ0FBQztJQUVEOztPQUVHO0lBQ0ksR0FBRztRQUNSLElBQUksQ0FBQyxZQUFZLEVBQUUsQ0FBQztRQUNwQixJQUFJLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFFaEMsSUFBSSxDQUFDLFdBQVcsRUFBRSxDQUFDO1FBRW5CLHVCQUF1QjtRQUN2QixtQ0FBbUM7UUFFbkMsc0JBQXNCO0lBQ3hCLENBQUM7SUFFRDs7O09BR0c7SUFDSCxTQUFTO1FBQ1AsT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDO0lBQ3JCLENBQUM7SUFFRDs7O09BR0c7SUFDSCxRQUFRO1FBQ04sT0FBTyxJQUFJLENBQUMsVUFBVSxDQUFDO0lBQ3pCLENBQUM7SUFFRDs7OztPQUlHO0lBQ0gsU0FBUyxDQUFDLE9BQWU7UUFDdkIsSUFBSSxNQUFNLEdBQUcsT0FBTyxLQUFLLFNBQVMsQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBRWxFLEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxJQUFJLENBQUMsVUFBVSxDQUFDLE1BQU0sRUFBRSxDQUFDLEVBQUUsRUFBRTtZQUMvQyxNQUFNLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQyxNQUFNLEVBQUUsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1NBQy9DO1FBRUQsT0FBTyxNQUFNLENBQUM7SUFDaEIsQ0FBQztDQWdCRjtBQWpFRCx3QkFpRUM7QUFFRDs7R0FFRztBQUNILE1BQWEsU0FBVSxTQUFRLE1BQU07SUFDbkMsWUFBc0IsVUFBb0I7UUFDeEMsS0FBSyxDQUFDLFVBQVUsQ0FBQyxDQUFDO1FBREUsZUFBVSxHQUFWLFVBQVUsQ0FBVTtJQUUxQyxDQUFDO0lBRUQ7Ozs7O09BS0c7SUFDSCxHQUFHLENBQUMsQ0FBUyxFQUFFLENBQVE7UUFDckIsT0FBTyxDQUFDLEdBQUMsQ0FBQyxDQUFDO0lBQ2IsQ0FBQztJQUVEOzs7T0FHRztJQUNILFdBQVc7UUFDVCxPQUFPLDBCQUEwQixDQUFDO0lBQ3BDLENBQUM7SUFFRDs7O09BR0c7SUFDSCxZQUFZO1FBQ1YsT0FBTyxvQkFBb0IsQ0FBQztJQUM5QixDQUFDO0NBQ0Y7QUE5QkQsOEJBOEJDO0FBRUQ7O0dBRUc7QUFDSCxNQUFhLFNBQVUsU0FBUSxNQUFNO0lBQ25DLFlBQXNCLFVBQW9CO1FBQ3hDLEtBQUssQ0FBQyxVQUFVLENBQUMsQ0FBQztRQURFLGVBQVUsR0FBVixVQUFVLENBQVU7SUFFMUMsQ0FBQztJQUVEOzs7OztPQUtHO0lBQ0gsR0FBRyxDQUFDLENBQVMsRUFBRSxDQUFRO1FBQ3JCLE9BQU8sQ0FBQyxHQUFDLENBQUMsQ0FBQztJQUNiLENBQUM7SUFFRDs7O09BR0c7SUFDSCxXQUFXO1FBQ1QsT0FBTywwQkFBMEIsQ0FBQztJQUNwQyxDQUFDO0lBRUQ7OztPQUdHO0lBQ0gsWUFBWTtRQUNWLE9BQU8sb0JBQW9CLENBQUM7SUFDOUIsQ0FBQztDQUNGO0FBOUJELDhCQThCQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogUGF0csOzbiBUZW1wbGF0ZSBNZXRob2QgKENvbXBvcnRhbWllbnRvKVxuICogUGVybWl0ZSBkZWZpbmlyIHVuIGVzcXVlbGV0byBhbGdvcsOtdG1pY28gZW4gdW5hIHN1cGVyY2xhc2UsIGRlIG1vZG8gcXVlXG4gKiBhcXVlbGxhcyBzdWJjbGFzZXMgcXVlIGV4dGllbmRhbiBlbCBjb21wb3J0YW1pZW50byBkZSBkaWNobyBlc3F1ZWxldG8gcHVlZGFuXG4gKiBzb2JyZWVzY3JpYmlyIGFsZ3Vub3MgcGFzb3MgZGVsIGFsZ29yw610bW8gc2luIG1vZGlmaWNhciBzdSBlc3RydWN0dXJhIGJhc2VcbiAqIFxuICogVmVudGFqYXMgLS0+IFJlc3BldGEgT3Blbi1jbG9zZWRcbiAqIERlc3RlbnRhamFzIC0tPiBObyByZXNwZXRhIExpc2tvdiBTdWJzdGl0dXRpb25cbiAqL1xuXG4vKipcbiAqIENsYXNlIEFic3RyYWN0YSBkb25kZSBzZSBkZWZpbmUgZWwgbWV0b2RvIGRlIHBsYW50aWxsYVxuICovXG5leHBvcnQgYWJzdHJhY3QgY2xhc3MgUmVkdWNlIHtcbiAgcHJvdGVjdGVkIHJlc3VsdDogbnVtYmVyO1xuICBjb25zdHJ1Y3Rvcihwcm90ZWN0ZWQgaW5wdXRBcnJheTogbnVtYmVyW10pIHtcbiAgfVxuXG4gIC8qKlxuICAgKiBNw6l0b2RvIGRlIHBsYW50aWxsYVxuICAgKi9cbiAgcHVibGljIHJ1bigpIHtcbiAgICB0aGlzLmJlZm9yZVJlZHVjZSgpO1xuICAgIHRoaXMucmVzdWx0ID0gdGhpcy5hZGRSZWR1Y2UoMCk7XG5cbiAgICB0aGlzLmFmdGVyUmVkdWNlKCk7XG5cbiAgICAvLyB0aGlzLmJlZm9yZVJlZHVjZSgpO1xuICAgIC8vIHRoaXMucmVzdWx0ID0gdGhpcy5hZGRSZWR1Y2UoMCk7XG5cbiAgICAvLyB0aGlzLmFmdGVyUmVkdWNlKCk7XG4gIH1cblxuICAvKipcbiAgICogT2J0ZW5lciBlbCByZXN1bHRhZG8gZGUgcmVkdWNlXG4gICAqIEByZXR1cm5zIHtzdHJpbmd9XG4gICAqL1xuICBnZXRSZXN1bHQoKSB7XG4gICAgcmV0dXJuIHRoaXMucmVzdWx0O1xuICB9XG5cbiAgLyoqXG4gICAqIE9idG5lciBlbCBhcnJheSBkZSBlbnRyYWRhXG4gICAqIEByZXR1cm5zIHtudW1iZXJbXX1cbiAgICovXG4gIGdldEFycmF5KCkge1xuICAgIHJldHVybiB0aGlzLmlucHV0QXJyYXk7XG4gIH1cblxuICAvKipcbiAgICogTcOpdG9kbyBFbmNhcmdhZG8gZGUgYXBsaWNhciBlbCBhZGRSZWR1Y2VcbiAgICogQHBhcmFtIHtudW1iZXJ9IGluaWNpYWwgcG9zaWNpw7NuIGluaWNpYWxcbiAgICogQHJldHVybnMge251bWJlcn1cbiAgICovXG4gIGFkZFJlZHVjZShpbmljaWFsOiBudW1iZXIpOiBudW1iZXIge1xuICAgIGxldCByZXN1bHQgPSBpbmljaWFsICE9PSB1bmRlZmluZWQgPyBpbmljaWFsIDogdGhpcy5pbnB1dEFycmF5WzBdO1xuXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLmlucHV0QXJyYXkubGVuZ3RoOyBpKyspIHtcbiAgICAgIHJlc3VsdCA9IHRoaXMuYWRkKHJlc3VsdCwgdGhpcy5pbnB1dEFycmF5W2ldKTtcbiAgICB9XG5cbiAgICByZXR1cm4gcmVzdWx0O1xuICB9XG5cbiAgLyoqXG4gICAqIEhvY2tcbiAgICovXG4gIGFic3RyYWN0IGFmdGVyUmVkdWNlKCk6IHN0cmluZztcbiAgYWJzdHJhY3QgYmVmb3JlUmVkdWNlKCk6IHN0cmluZztcblxuXG4gIC8qKlxuICAgKiBNw6l0b2RvIGFic3RhY3RvIGEgZGVmaW5pciBlbiBsYXMgY2xhc2VzIGhpamFzXG4gICAqIEBwYXJhbSB7bnVtYmVyfSBhXG4gICAqIEBwYXJhbSB7bnVtYmVyfSBiXG4gICAqL1xuICBhYnN0cmFjdCBhZGQoYTogbnVtYmVyLCBiOm51bWJlcik6IG51bWJlcjtcblxufVxuXG4vKipcbiAqIENsYXNlIGhpamEgZW5jYXJnYWRhIGRlIGhhY2VyIHVuYSBzdW1hIGRlIGxvcyBlbGVtZW50b3MgZGUgdW4gYXJyYXlcbiAqL1xuZXhwb3J0IGNsYXNzIEFkZFJlZHVjZSBleHRlbmRzIFJlZHVjZSB7XG4gIGNvbnN0cnVjdG9yKHByb3RlY3RlZCBpbnB1dEFycmF5OiBudW1iZXJbXSkge1xuICAgIHN1cGVyKGlucHV0QXJyYXkpO1xuICB9XG5cbiAgLyoqXG4gICAqIFN1bWEgZGUgZG9zIGVsZW1lbnRvc1xuICAgKiBAcGFyYW0ge251bWJlcn0gYSBcbiAgICogQHBhcmFtIHtudW1iZXJ9IGIgXG4gICAqIEByZXR1cm5zIHtudW1iZXJ9XG4gICAqL1xuICBhZGQoYTogbnVtYmVyLCBiOm51bWJlcikge1xuICAgIHJldHVybiBhK2I7XG4gIH1cblxuICAvKipcbiAgICogTcOpdG9kbyBIb2NrXG4gICAqIEByZXR1cm5zIHtzdHJpbmd9XG4gICAqL1xuICBhZnRlclJlZHVjZSgpIHtcbiAgICByZXR1cm4gJ1ZlY3RvciByZWR1Y2lkbyBwb3Igc3VtYSc7XG4gIH1cblxuICAvKipcbiAgICogTcOpdG9kbyBIb2NrXG4gICAqIEByZXR1cm5zIHtzdHJpbmd9XG4gICAqL1xuICBiZWZvcmVSZWR1Y2UoKSB7XG4gICAgcmV0dXJuICdDb21lbnphciBBZGRSZWN1Y2UnO1xuICB9XG59XG5cbi8qKlxuICogQ2xhc2UgaGlqYSBlbmNhcmdhZGEgZGUgaGFjZXIgdW5hIHN1bWEgZGUgbG9zIGVsZW1lbnRvcyBkZSB1biBhcnJheVxuICovXG5leHBvcnQgY2xhc3MgU3ViUmVkdWNlIGV4dGVuZHMgUmVkdWNlIHtcbiAgY29uc3RydWN0b3IocHJvdGVjdGVkIGlucHV0QXJyYXk6IG51bWJlcltdKSB7XG4gICAgc3VwZXIoaW5wdXRBcnJheSk7XG4gIH1cblxuICAvKipcbiAgICogU3VtYSBkZSBkb3MgZWxlbWVudG9zXG4gICAqIEBwYXJhbSB7bnVtYmVyfSBhIFxuICAgKiBAcGFyYW0ge251bWJlcn0gYiBcbiAgICogQHJldHVybnMge251bWJlcn1cbiAgICovXG4gIGFkZChhOiBudW1iZXIsIGI6bnVtYmVyKSB7XG4gICAgcmV0dXJuIGEtYjtcbiAgfVxuXG4gIC8qKlxuICAgKiBNw6l0b2RvIEhvY2tcbiAgICogQHJldHVybnMge3N0cmluZ31cbiAgICovXG4gIGFmdGVyUmVkdWNlKCkge1xuICAgIHJldHVybiAnVmVjdG9yIHJlZHVjaWRvIHBvciBzdW1hJztcbiAgfVxuXG4gIC8qKlxuICAgKiBNw6l0b2RvIEhvY2tcbiAgICogQHJldHVybnMge3N0cmluZ31cbiAgICovXG4gIGJlZm9yZVJlZHVjZSgpIHtcbiAgICByZXR1cm4gJ0NvbWVuemFyIEFkZFJlY3VjZSc7XG4gIH1cbn1cblxuXG4iXX0=
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3Nlcmdpby9Eb2N1bWVudG9zLzPCuiBJbmZvLzLCuiBDdWF0cmkvRFNJL21vZDIvc3JjL1RlbXBsYXRlTWV0aG9kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJhQUFBOzs7Ozs7OztBQVFHLEcsNDlSQUt5QjswUEFINUI7O0FBRUcsR0FDSCxLQUFzQixDQUFBLE1BQU0sQ0FFMUIsV0FBQSxDQUFzQixVQUF0QixDQUEwQywrQ0FBcEIsS0FBQSxVQUFBLENBQUEsVUFBQSxDQUNyQixDQUVEOztBQUVHLE9BQ0ksR0FBRyxFQUFBLCtDQUNSLEtBQUssWUFBTCxHQURRLHVCQUVSLEtBQUssTUFBTCxDQUFjLEtBQUssU0FBTCxDQUFlLENBQWYsQ0FBZCxDQUZRLHVCQUlSLEtBQUssV0FBTCxHQUVBO0FBQ0E7QUFFQTtBQUNELENBRUQ7OztBQUdHLE9BQ0gsU0FBUyxFQUFBLCtDQUNQLE1BQU8sTUFBSyxNQUFaLENBQ0QsQ0FFRDs7O0FBR0csT0FDSCxRQUFRLEVBQUEsK0NBQ04sTUFBTyxNQUFLLFVBQVosQ0FDRCxDQUVEOzs7O0FBSUcsT0FDSCxTQUFTLENBQUMsT0FBRCxDQUFnQix3QkFDdkIsR0FBSSxDQUFBLE1BQU0seUJBQUcsT0FBTyxHQUFLLFNBQVosNEJBQXdCLE9BQXhCLDZCQUFrQyxLQUFLLFVBQUwsQ0FBZ0IsQ0FBaEIsQ0FBbEMsQ0FBSCxDQUFWLENBRHVCLHVCQUd2QixJQUFLLEdBQUksQ0FBQSxDQUFDLDBCQUFHLENBQUgsQ0FBVixDQUFnQixDQUFDLENBQUcsS0FBSyxVQUFMLENBQWdCLE1BQXBDLENBQTRDLENBQUMsRUFBN0MsQ0FBaUQseUJBQy9DLE1BQU0sQ0FBRyxLQUFLLEdBQUwsQ0FBUyxNQUFULENBQWlCLEtBQUssVUFBTCxDQUFnQixDQUFoQixDQUFqQixDQUFULENBQ0QsQ0FMc0Isd0JBT3ZCLE1BQU8sQ0FBQSxNQUFQLENBQ0QsQ0FqRHlCLEMsd0JBQTVCLE9BQUEsQ0FBQSxNQUFBLENBQUEsTUFBQSxDQW1FQTs7QUFFRyxHQUNILEtBQWEsQ0FBQSxTQUFiLFFBQStCLENBQUEsTUFBTSxDQUNuQyxXQUFBLENBQXNCLFVBQXRCLENBQTBDLGdEQUN4QyxNQUFNLFVBQU4sRUFEd0Msd0JBQXBCLEtBQUEsVUFBQSxDQUFBLFVBQUEsQ0FFckIsQ0FFRDs7Ozs7QUFLRyxPQUNILEdBQUcsQ0FBQyxDQUFELENBQVksQ0FBWixDQUFvQixnREFDckIsTUFBTyxDQUFBLENBQUMsQ0FBQyxDQUFULENBQ0QsQ0FFRDs7O0FBR0csT0FDSCxXQUFXLEVBQUEsZ0RBQ1QsTUFBTywwQkFBUCxDQUNELENBRUQ7OztBQUdHLE9BQ0gsWUFBWSxFQUFBLGdEQUNWLE1BQU8sb0JBQVAsQ0FDRCxDQTdCa0MsQyx3QkFBckMsT0FBQSxDQUFBLFNBQUEsQ0FBQSxTQUFBLENBZ0NBOztBQUVHLEdBQ0gsS0FBYSxDQUFBLFNBQWIsUUFBK0IsQ0FBQSxNQUFNLENBQ25DLFdBQUEsQ0FBc0IsVUFBdEIsQ0FBMEMsZ0RBQ3hDLE1BQU0sVUFBTixFQUR3Qyx3QkFBcEIsS0FBQSxVQUFBLENBQUEsVUFBQSxDQUVyQixDQUVEOzs7OztBQUtHLE9BQ0gsR0FBRyxDQUFDLENBQUQsQ0FBWSxDQUFaLENBQW9CLGlEQUNyQixNQUFPLENBQUEsQ0FBQyxDQUFDLENBQVQsQ0FDRCxDQUVEOzs7QUFHRyxPQUNILFdBQVcsRUFBQSxpREFDVCxNQUFPLDBCQUFQLENBQ0QsQ0FFRDs7O0FBR0csT0FDSCxZQUFZLEVBQUEsaURBQ1YsTUFBTyxvQkFBUCxDQUNELENBN0JrQyxDLHdCQUFyQyxPQUFBLENBQUEsU0FBQSxDQUFBLFNBQUEsQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogUGF0csOzbiBUZW1wbGF0ZSBNZXRob2QgKENvbXBvcnRhbWllbnRvKVxuICogUGVybWl0ZSBkZWZpbmlyIHVuIGVzcXVlbGV0byBhbGdvcsOtdG1pY28gZW4gdW5hIHN1cGVyY2xhc2UsIGRlIG1vZG8gcXVlXG4gKiBhcXVlbGxhcyBzdWJjbGFzZXMgcXVlIGV4dGllbmRhbiBlbCBjb21wb3J0YW1pZW50byBkZSBkaWNobyBlc3F1ZWxldG8gcHVlZGFuXG4gKiBzb2JyZWVzY3JpYmlyIGFsZ3Vub3MgcGFzb3MgZGVsIGFsZ29yw610bW8gc2luIG1vZGlmaWNhciBzdSBlc3RydWN0dXJhIGJhc2VcbiAqIFxuICogVmVudGFqYXMgLS0+IFJlc3BldGEgT3Blbi1jbG9zZWRcbiAqIERlc3RlbnRhamFzIC0tPiBObyByZXNwZXRhIExpc2tvdiBTdWJzdGl0dXRpb25cbiAqL1xuXG4vKipcbiAqIENsYXNlIEFic3RyYWN0YSBkb25kZSBzZSBkZWZpbmUgZWwgbWV0b2RvIGRlIHBsYW50aWxsYVxuICovXG5leHBvcnQgYWJzdHJhY3QgY2xhc3MgUmVkdWNlIHtcbiAgcHJvdGVjdGVkIHJlc3VsdDogbnVtYmVyO1xuICBjb25zdHJ1Y3Rvcihwcm90ZWN0ZWQgaW5wdXRBcnJheTogbnVtYmVyW10pIHtcbiAgfVxuXG4gIC8qKlxuICAgKiBNw6l0b2RvIGRlIHBsYW50aWxsYVxuICAgKi9cbiAgcHVibGljIHJ1bigpIHtcbiAgICB0aGlzLmJlZm9yZVJlZHVjZSgpO1xuICAgIHRoaXMucmVzdWx0ID0gdGhpcy5hZGRSZWR1Y2UoMCk7XG5cbiAgICB0aGlzLmFmdGVyUmVkdWNlKCk7XG5cbiAgICAvLyB0aGlzLmJlZm9yZVJlZHVjZSgpO1xuICAgIC8vIHRoaXMucmVzdWx0ID0gdGhpcy5hZGRSZWR1Y2UoMCk7XG5cbiAgICAvLyB0aGlzLmFmdGVyUmVkdWNlKCk7XG4gIH1cblxuICAvKipcbiAgICogT2J0ZW5lciBlbCByZXN1bHRhZG8gZGUgcmVkdWNlXG4gICAqIEByZXR1cm5zIHtzdHJpbmd9XG4gICAqL1xuICBnZXRSZXN1bHQoKSB7XG4gICAgcmV0dXJuIHRoaXMucmVzdWx0O1xuICB9XG5cbiAgLyoqXG4gICAqIE9idG5lciBlbCBhcnJheSBkZSBlbnRyYWRhXG4gICAqIEByZXR1cm5zIHtudW1iZXJbXX1cbiAgICovXG4gIGdldEFycmF5KCkge1xuICAgIHJldHVybiB0aGlzLmlucHV0QXJyYXk7XG4gIH1cblxuICAvKipcbiAgICogTcOpdG9kbyBFbmNhcmdhZG8gZGUgYXBsaWNhciBlbCBhZGRSZWR1Y2VcbiAgICogQHBhcmFtIHtudW1iZXJ9IGluaWNpYWwgcG9zaWNpw7NuIGluaWNpYWxcbiAgICogQHJldHVybnMge251bWJlcn1cbiAgICovXG4gIGFkZFJlZHVjZShpbmljaWFsOiBudW1iZXIpOiBudW1iZXIge1xuICAgIGxldCByZXN1bHQgPSBpbmljaWFsICE9PSB1bmRlZmluZWQgPyBpbmljaWFsIDogdGhpcy5pbnB1dEFycmF5WzBdO1xuXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLmlucHV0QXJyYXkubGVuZ3RoOyBpKyspIHtcbiAgICAgIHJlc3VsdCA9IHRoaXMuYWRkKHJlc3VsdCwgdGhpcy5pbnB1dEFycmF5W2ldKTtcbiAgICB9XG5cbiAgICByZXR1cm4gcmVzdWx0O1xuICB9XG5cbiAgLyoqXG4gICAqIEhvY2tcbiAgICovXG4gIGFic3RyYWN0IGFmdGVyUmVkdWNlKCk6IHN0cmluZztcbiAgYWJzdHJhY3QgYmVmb3JlUmVkdWNlKCk6IHN0cmluZztcblxuXG4gIC8qKlxuICAgKiBNw6l0b2RvIGFic3RhY3RvIGEgZGVmaW5pciBlbiBsYXMgY2xhc2VzIGhpamFzXG4gICAqIEBwYXJhbSB7bnVtYmVyfSBhXG4gICAqIEBwYXJhbSB7bnVtYmVyfSBiXG4gICAqL1xuICBhYnN0cmFjdCBhZGQoYTogbnVtYmVyLCBiOm51bWJlcik6IG51bWJlcjtcblxufVxuXG4vKipcbiAqIENsYXNlIGhpamEgZW5jYXJnYWRhIGRlIGhhY2VyIHVuYSBzdW1hIGRlIGxvcyBlbGVtZW50b3MgZGUgdW4gYXJyYXlcbiAqL1xuZXhwb3J0IGNsYXNzIEFkZFJlZHVjZSBleHRlbmRzIFJlZHVjZSB7XG4gIGNvbnN0cnVjdG9yKHByb3RlY3RlZCBpbnB1dEFycmF5OiBudW1iZXJbXSkge1xuICAgIHN1cGVyKGlucHV0QXJyYXkpO1xuICB9XG5cbiAgLyoqXG4gICAqIFN1bWEgZGUgZG9zIGVsZW1lbnRvc1xuICAgKiBAcGFyYW0ge251bWJlcn0gYSBcbiAgICogQHBhcmFtIHtudW1iZXJ9IGIgXG4gICAqIEByZXR1cm5zIHtudW1iZXJ9XG4gICAqL1xuICBhZGQoYTogbnVtYmVyLCBiOm51bWJlcikge1xuICAgIHJldHVybiBhK2I7XG4gIH1cblxuICAvKipcbiAgICogTcOpdG9kbyBIb2NrXG4gICAqIEByZXR1cm5zIHtzdHJpbmd9XG4gICAqL1xuICBhZnRlclJlZHVjZSgpIHtcbiAgICByZXR1cm4gJ1ZlY3RvciByZWR1Y2lkbyBwb3Igc3VtYSc7XG4gIH1cblxuICAvKipcbiAgICogTcOpdG9kbyBIb2NrXG4gICAqIEByZXR1cm5zIHtzdHJpbmd9XG4gICAqL1xuICBiZWZvcmVSZWR1Y2UoKSB7XG4gICAgcmV0dXJuICdDb21lbnphciBBZGRSZWN1Y2UnO1xuICB9XG59XG5cbi8qKlxuICogQ2xhc2UgaGlqYSBlbmNhcmdhZGEgZGUgaGFjZXIgdW5hIHN1bWEgZGUgbG9zIGVsZW1lbnRvcyBkZSB1biBhcnJheVxuICovXG5leHBvcnQgY2xhc3MgU3ViUmVkdWNlIGV4dGVuZHMgUmVkdWNlIHtcbiAgY29uc3RydWN0b3IocHJvdGVjdGVkIGlucHV0QXJyYXk6IG51bWJlcltdKSB7XG4gICAgc3VwZXIoaW5wdXRBcnJheSk7XG4gIH1cblxuICAvKipcbiAgICogU3VtYSBkZSBkb3MgZWxlbWVudG9zXG4gICAqIEBwYXJhbSB7bnVtYmVyfSBhIFxuICAgKiBAcGFyYW0ge251bWJlcn0gYiBcbiAgICogQHJldHVybnMge251bWJlcn1cbiAgICovXG4gIGFkZChhOiBudW1iZXIsIGI6bnVtYmVyKSB7XG4gICAgcmV0dXJuIGEtYjtcbiAgfVxuXG4gIC8qKlxuICAgKiBNw6l0b2RvIEhvY2tcbiAgICogQHJldHVybnMge3N0cmluZ31cbiAgICovXG4gIGFmdGVyUmVkdWNlKCkge1xuICAgIHJldHVybiAnVmVjdG9yIHJlZHVjaWRvIHBvciBzdW1hJztcbiAgfVxuXG4gIC8qKlxuICAgKiBNw6l0b2RvIEhvY2tcbiAgICogQHJldHVybnMge3N0cmluZ31cbiAgICovXG4gIGJlZm9yZVJlZHVjZSgpIHtcbiAgICByZXR1cm4gJ0NvbWVuemFyIEFkZFJlY3VjZSc7XG4gIH1cbn1cblxuXG4iXX0=