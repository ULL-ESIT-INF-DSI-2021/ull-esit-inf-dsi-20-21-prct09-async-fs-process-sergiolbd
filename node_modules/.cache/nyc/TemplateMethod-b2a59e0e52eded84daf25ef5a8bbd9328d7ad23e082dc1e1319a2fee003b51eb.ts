"use strict";/**
 * Patrón Template Method (Comportamiento)
 * Permite definir un esqueleto algorítmico en una superclase, de modo que
 * aquellas subclases que extiendan el comportamiento de dicho esqueleto puedan
 * sobreescribir algunos pasos del algorítmo sin modificar su estructura base
 *
 * Ventajas --> Respeta Open-closed
 * Destentajas --> No respeta Liskov Substitution
 */function cov_xkf76gf08(){var path="/home/sergio/Documentos/3\xBA Info/2\xBA Cuatri/DSI/mod2/src/TemplateMethod.ts";var hash="6d1a6bd5f7493e57405d756a343e31cb41c59756";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/home/sergio/Documentos/3\xBA Info/2\xBA Cuatri/DSI/mod2/src/TemplateMethod.ts",statementMap:{"0":{start:{line:11,column:0},end:{line:11,column:62}},"1":{start:{line:12,column:0},end:{line:12,column:44}},"2":{start:{line:18,column:8},end:{line:18,column:37}},"3":{start:{line:24,column:8},end:{line:24,column:40}},"4":{start:{line:25,column:8},end:{line:25,column:30}},"5":{start:{line:32,column:8},end:{line:32,column:27}},"6":{start:{line:39,column:8},end:{line:39,column:31}},"7":{start:{line:47,column:21},end:{line:47,column:73}},"8":{start:{line:48,column:8},end:{line:50,column:9}},"9":{start:{line:48,column:21},end:{line:48,column:22}},"10":{start:{line:49,column:12},end:{line:49,column:58}},"11":{start:{line:51,column:8},end:{line:51,column:22}},"12":{start:{line:54,column:0},end:{line:54,column:24}},"13":{start:{line:60,column:8},end:{line:60,column:26}},"14":{start:{line:61,column:8},end:{line:61,column:37}},"15":{start:{line:70,column:8},end:{line:70,column:21}},"16":{start:{line:85,column:8},end:{line:85,column:42}},"17":{start:{line:88,column:0},end:{line:88,column:30}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:17,column:4},end:{line:17,column:5}},loc:{start:{line:17,column:28},end:{line:19,column:5}},line:17},"1":{name:"(anonymous_1)",decl:{start:{line:23,column:4},end:{line:23,column:5}},loc:{start:{line:23,column:10},end:{line:26,column:5}},line:23},"2":{name:"(anonymous_2)",decl:{start:{line:31,column:4},end:{line:31,column:5}},loc:{start:{line:31,column:16},end:{line:33,column:5}},line:31},"3":{name:"(anonymous_3)",decl:{start:{line:38,column:4},end:{line:38,column:5}},loc:{start:{line:38,column:15},end:{line:40,column:5}},line:38},"4":{name:"(anonymous_4)",decl:{start:{line:46,column:4},end:{line:46,column:5}},loc:{start:{line:46,column:23},end:{line:52,column:5}},line:46},"5":{name:"(anonymous_5)",decl:{start:{line:59,column:4},end:{line:59,column:5}},loc:{start:{line:59,column:28},end:{line:62,column:5}},line:59},"6":{name:"(anonymous_6)",decl:{start:{line:69,column:4},end:{line:69,column:5}},loc:{start:{line:69,column:14},end:{line:71,column:5}},line:69},"7":{name:"(anonymous_7)",decl:{start:{line:84,column:4},end:{line:84,column:5}},loc:{start:{line:84,column:21},end:{line:86,column:5}},line:84}},branchMap:{"0":{loc:{start:{line:47,column:21},end:{line:47,column:73}},type:"cond-expr",locations:[{start:{line:47,column:45},end:{line:47,column:52}},{start:{line:47,column:55},end:{line:47,column:73}}],line:47}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},b:{"0":[0,0]},inputSourceMap:{version:3,file:"/home/sergio/Documentos/3\xBA Info/2\xBA Cuatri/DSI/mod2/src/TemplateMethod.ts",sources:["/home/sergio/Documentos/3\xBA Info/2\xBA Cuatri/DSI/mod2/src/TemplateMethod.ts"],names:[],mappings:";AAAA;;;;;;;;GAQG;;;AAEH;;GAEG;AACH,MAAsB,MAAM;IAE1B,YAAsB,UAAoB;QAApB,eAAU,GAAV,UAAU,CAAU;IAC1C,CAAC;IAED;;OAEG;IACI,GAAG;QACR,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;QAEhC,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAED;;;OAGG;IACH,SAAS;QACP,OAAO,IAAI,CAAC,MAAM,CAAC;IACrB,CAAC;IAED;;;OAGG;IACH,QAAQ;QACN,OAAO,IAAI,CAAC,UAAU,CAAC;IACzB,CAAC;IAED;;;;OAIG;IACH,SAAS,CAAC,OAAe;QACvB,IAAI,MAAM,GAAG,OAAO,KAAK,SAAS,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;QAElE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC/C,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;SAC/C;QAED,OAAO,MAAM,CAAC;IAChB,CAAC;CAaF;AAxDD,wBAwDC;AAED;;GAEG;AACH,MAAa,SAAU,SAAQ,MAAM;IACnC,YAAsB,UAAoB;QACxC,KAAK,CAAC,UAAU,CAAC,CAAC;QADE,eAAU,GAAV,UAAU,CAAU;IAE1C,CAAC;IAED;;;;;OAKG;IACH,GAAG,CAAC,CAAS,EAAE,CAAQ;QACrB,OAAO,CAAC,GAAC,CAAC,CAAC;IACb,CAAC;IAED,uCAAuC;IACvC,uEAAuE;IAEvE,uDAAuD;IACvD,qDAAqD;IACrD,MAAM;IACN,0BAA0B;IAC1B,mBAAmB;IACnB,IAAI;IAEJ;;;OAGG;IACH,cAAc;QACZ,OAAO,0BAA0B,CAAC;IACpC,CAAC;CACF;AAhCD,8BAgCC",sourcesContent:["/**\n * Patr\xF3n Template Method (Comportamiento)\n * Permite definir un esqueleto algor\xEDtmico en una superclase, de modo que\n * aquellas subclases que extiendan el comportamiento de dicho esqueleto puedan\n * sobreescribir algunos pasos del algor\xEDtmo sin modificar su estructura base\n * \n * Ventajas --> Respeta Open-closed\n * Destentajas --> No respeta Liskov Substitution\n */\n\n/**\n * Clase Abstracta donde se define el metodo de plantilla\n */\nexport abstract class Reduce {\n  protected result: number;\n  constructor(protected inputArray: number[]) {\n  }\n\n  /**\n   * M\xE9todo de plantilla\n   */\n  public run() {\n    this.result = this.addReduce(0);\n\n    this.afterAddReduce();\n  }\n\n  /**\n   * Obtener el resultado de reduce\n   * @returns {string}\n   */\n  getResult() {\n    return this.result;\n  }\n\n  /**\n   * Obtner el array de entrada\n   * @returns {number[]}\n   */\n  getArray() {\n    return this.inputArray;\n  }\n\n  /**\n   * M\xE9todo Encargado de aplicar el addReduce\n   * @param {number} inicial posici\xF3n inicial\n   * @returns {number}\n   */\n  addReduce(inicial: number): number {\n    let result = inicial !== undefined ? inicial : this.inputArray[0];\n\n    for (let i = 0; i < this.inputArray.length; i++) {\n      result = this.add(result, this.inputArray[i]);\n    }\n\n    return result;\n  }\n\n  /**\n   * Hock\n   */\n  abstract afterAddReduce(): string;\n\n  /**\n   * M\xE9todo abstacto a definir en las clases hijas\n   * @param {number} a\n   * @param {number} b \n   */\n  abstract add(a: number, b:number): number;\n}\n\n/**\n * Clase hija encargada de hacer una suma de los elementos de un array\n */\nexport class AddReduce extends Reduce {\n  constructor(protected inputArray: number[]) {\n    super(inputArray);\n  }\n\n  /**\n   * Suma de dos elementos\n   * @param {number} a \n   * @param {number} b \n   * @returns {number}\n   */\n  add(a: number, b:number) {\n    return a+b;\n  }\n\n  // addReduce(inicial: number): number {\n  //   let result = inicial !== undefined ? inicial : this.inputArray[0];\n\n  //   for (let i = 0; i < this.inputArray.length; i++) {\n  //     result = this.add(result, this.inputArray[i]);\n  //   }\n  //   this.result = result;\n  //   return result;\n  // }\n\n  /**\n   * M\xE9todo Hock\n   * @returns {string}\n   */\n  afterAddReduce() {\n    return 'Vector reducido por suma';\n  }\n}\n\n\n"]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"6d1a6bd5f7493e57405d756a343e31cb41c59756"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_xkf76gf08=function(){return actualCoverage;};}return actualCoverage;}cov_xkf76gf08();cov_xkf76gf08().s[0]++;Object.defineProperty(exports,"__esModule",{value:true});cov_xkf76gf08().s[1]++;exports.AddReduce=exports.Reduce=void 0;/**
 * Clase Abstracta donde se define el metodo de plantilla
 */class Reduce{constructor(inputArray){cov_xkf76gf08().f[0]++;cov_xkf76gf08().s[2]++;this.inputArray=inputArray;}/**
     * Método de plantilla
     */run(){cov_xkf76gf08().f[1]++;cov_xkf76gf08().s[3]++;this.result=this.addReduce(0);cov_xkf76gf08().s[4]++;this.afterAddReduce();}/**
     * Obtener el resultado de reduce
     * @returns {string}
     */getResult(){cov_xkf76gf08().f[2]++;cov_xkf76gf08().s[5]++;return this.result;}/**
     * Obtner el array de entrada
     * @returns {number[]}
     */getArray(){cov_xkf76gf08().f[3]++;cov_xkf76gf08().s[6]++;return this.inputArray;}/**
     * Método Encargado de aplicar el addReduce
     * @param {number} inicial posición inicial
     * @returns {number}
     */addReduce(inicial){cov_xkf76gf08().f[4]++;let result=(cov_xkf76gf08().s[7]++,inicial!==undefined?(cov_xkf76gf08().b[0][0]++,inicial):(cov_xkf76gf08().b[0][1]++,this.inputArray[0]));cov_xkf76gf08().s[8]++;for(let i=(cov_xkf76gf08().s[9]++,0);i<this.inputArray.length;i++){cov_xkf76gf08().s[10]++;result=this.add(result,this.inputArray[i]);}cov_xkf76gf08().s[11]++;return result;}}cov_xkf76gf08().s[12]++;exports.Reduce=Reduce;/**
 * Clase hija encargada de hacer una suma de los elementos de un array
 */class AddReduce extends Reduce{constructor(inputArray){cov_xkf76gf08().f[5]++;cov_xkf76gf08().s[13]++;super(inputArray);cov_xkf76gf08().s[14]++;this.inputArray=inputArray;}/**
     * Suma de dos elementos
     * @param {number} a
     * @param {number} b
     * @returns {number}
     */add(a,b){cov_xkf76gf08().f[6]++;cov_xkf76gf08().s[15]++;return a+b;}// addReduce(inicial: number): number {
//   let result = inicial !== undefined ? inicial : this.inputArray[0];
//   for (let i = 0; i < this.inputArray.length; i++) {
//     result = this.add(result, this.inputArray[i]);
//   }
//   this.result = result;
//   return result;
// }
/**
     * Método Hock
     * @returns {string}
     */afterAddReduce(){cov_xkf76gf08().f[7]++;cov_xkf76gf08().s[16]++;return'Vector reducido por suma';}}cov_xkf76gf08().s[17]++;exports.AddReduce=AddReduce;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiL2hvbWUvc2VyZ2lvL0RvY3VtZW50b3MvM8K6IEluZm8vMsK6IEN1YXRyaS9EU0kvbW9kMi9zcmMvVGVtcGxhdGVNZXRob2QudHMiLCJzb3VyY2VzIjpbIi9ob21lL3Nlcmdpby9Eb2N1bWVudG9zLzPCuiBJbmZvLzLCuiBDdWF0cmkvRFNJL21vZDIvc3JjL1RlbXBsYXRlTWV0aG9kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQTs7Ozs7Ozs7R0FRRzs7O0FBRUg7O0dBRUc7QUFDSCxNQUFzQixNQUFNO0lBRTFCLFlBQXNCLFVBQW9CO1FBQXBCLGVBQVUsR0FBVixVQUFVLENBQVU7SUFDMUMsQ0FBQztJQUVEOztPQUVHO0lBQ0ksR0FBRztRQUNSLElBQUksQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUVoQyxJQUFJLENBQUMsY0FBYyxFQUFFLENBQUM7SUFDeEIsQ0FBQztJQUVEOzs7T0FHRztJQUNILFNBQVM7UUFDUCxPQUFPLElBQUksQ0FBQyxNQUFNLENBQUM7SUFDckIsQ0FBQztJQUVEOzs7T0FHRztJQUNILFFBQVE7UUFDTixPQUFPLElBQUksQ0FBQyxVQUFVLENBQUM7SUFDekIsQ0FBQztJQUVEOzs7O09BSUc7SUFDSCxTQUFTLENBQUMsT0FBZTtRQUN2QixJQUFJLE1BQU0sR0FBRyxPQUFPLEtBQUssU0FBUyxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFFbEUsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLElBQUksQ0FBQyxVQUFVLENBQUMsTUFBTSxFQUFFLENBQUMsRUFBRSxFQUFFO1lBQy9DLE1BQU0sR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFDLE1BQU0sRUFBRSxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7U0FDL0M7UUFFRCxPQUFPLE1BQU0sQ0FBQztJQUNoQixDQUFDO0NBYUY7QUF4REQsd0JBd0RDO0FBRUQ7O0dBRUc7QUFDSCxNQUFhLFNBQVUsU0FBUSxNQUFNO0lBQ25DLFlBQXNCLFVBQW9CO1FBQ3hDLEtBQUssQ0FBQyxVQUFVLENBQUMsQ0FBQztRQURFLGVBQVUsR0FBVixVQUFVLENBQVU7SUFFMUMsQ0FBQztJQUVEOzs7OztPQUtHO0lBQ0gsR0FBRyxDQUFDLENBQVMsRUFBRSxDQUFRO1FBQ3JCLE9BQU8sQ0FBQyxHQUFDLENBQUMsQ0FBQztJQUNiLENBQUM7SUFFRCx1Q0FBdUM7SUFDdkMsdUVBQXVFO0lBRXZFLHVEQUF1RDtJQUN2RCxxREFBcUQ7SUFDckQsTUFBTTtJQUNOLDBCQUEwQjtJQUMxQixtQkFBbUI7SUFDbkIsSUFBSTtJQUVKOzs7T0FHRztJQUNILGNBQWM7UUFDWixPQUFPLDBCQUEwQixDQUFDO0lBQ3BDLENBQUM7Q0FDRjtBQWhDRCw4QkFnQ0MiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFBhdHLDs24gVGVtcGxhdGUgTWV0aG9kIChDb21wb3J0YW1pZW50bylcbiAqIFBlcm1pdGUgZGVmaW5pciB1biBlc3F1ZWxldG8gYWxnb3LDrXRtaWNvIGVuIHVuYSBzdXBlcmNsYXNlLCBkZSBtb2RvIHF1ZVxuICogYXF1ZWxsYXMgc3ViY2xhc2VzIHF1ZSBleHRpZW5kYW4gZWwgY29tcG9ydGFtaWVudG8gZGUgZGljaG8gZXNxdWVsZXRvIHB1ZWRhblxuICogc29icmVlc2NyaWJpciBhbGd1bm9zIHBhc29zIGRlbCBhbGdvcsOtdG1vIHNpbiBtb2RpZmljYXIgc3UgZXN0cnVjdHVyYSBiYXNlXG4gKiBcbiAqIFZlbnRhamFzIC0tPiBSZXNwZXRhIE9wZW4tY2xvc2VkXG4gKiBEZXN0ZW50YWphcyAtLT4gTm8gcmVzcGV0YSBMaXNrb3YgU3Vic3RpdHV0aW9uXG4gKi9cblxuLyoqXG4gKiBDbGFzZSBBYnN0cmFjdGEgZG9uZGUgc2UgZGVmaW5lIGVsIG1ldG9kbyBkZSBwbGFudGlsbGFcbiAqL1xuZXhwb3J0IGFic3RyYWN0IGNsYXNzIFJlZHVjZSB7XG4gIHByb3RlY3RlZCByZXN1bHQ6IG51bWJlcjtcbiAgY29uc3RydWN0b3IocHJvdGVjdGVkIGlucHV0QXJyYXk6IG51bWJlcltdKSB7XG4gIH1cblxuICAvKipcbiAgICogTcOpdG9kbyBkZSBwbGFudGlsbGFcbiAgICovXG4gIHB1YmxpYyBydW4oKSB7XG4gICAgdGhpcy5yZXN1bHQgPSB0aGlzLmFkZFJlZHVjZSgwKTtcblxuICAgIHRoaXMuYWZ0ZXJBZGRSZWR1Y2UoKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBPYnRlbmVyIGVsIHJlc3VsdGFkbyBkZSByZWR1Y2VcbiAgICogQHJldHVybnMge3N0cmluZ31cbiAgICovXG4gIGdldFJlc3VsdCgpIHtcbiAgICByZXR1cm4gdGhpcy5yZXN1bHQ7XG4gIH1cblxuICAvKipcbiAgICogT2J0bmVyIGVsIGFycmF5IGRlIGVudHJhZGFcbiAgICogQHJldHVybnMge251bWJlcltdfVxuICAgKi9cbiAgZ2V0QXJyYXkoKSB7XG4gICAgcmV0dXJuIHRoaXMuaW5wdXRBcnJheTtcbiAgfVxuXG4gIC8qKlxuICAgKiBNw6l0b2RvIEVuY2FyZ2FkbyBkZSBhcGxpY2FyIGVsIGFkZFJlZHVjZVxuICAgKiBAcGFyYW0ge251bWJlcn0gaW5pY2lhbCBwb3NpY2nDs24gaW5pY2lhbFxuICAgKiBAcmV0dXJucyB7bnVtYmVyfVxuICAgKi9cbiAgYWRkUmVkdWNlKGluaWNpYWw6IG51bWJlcik6IG51bWJlciB7XG4gICAgbGV0IHJlc3VsdCA9IGluaWNpYWwgIT09IHVuZGVmaW5lZCA/IGluaWNpYWwgOiB0aGlzLmlucHV0QXJyYXlbMF07XG5cbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMuaW5wdXRBcnJheS5sZW5ndGg7IGkrKykge1xuICAgICAgcmVzdWx0ID0gdGhpcy5hZGQocmVzdWx0LCB0aGlzLmlucHV0QXJyYXlbaV0pO1xuICAgIH1cblxuICAgIHJldHVybiByZXN1bHQ7XG4gIH1cblxuICAvKipcbiAgICogSG9ja1xuICAgKi9cbiAgYWJzdHJhY3QgYWZ0ZXJBZGRSZWR1Y2UoKTogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBNw6l0b2RvIGFic3RhY3RvIGEgZGVmaW5pciBlbiBsYXMgY2xhc2VzIGhpamFzXG4gICAqIEBwYXJhbSB7bnVtYmVyfSBhXG4gICAqIEBwYXJhbSB7bnVtYmVyfSBiIFxuICAgKi9cbiAgYWJzdHJhY3QgYWRkKGE6IG51bWJlciwgYjpudW1iZXIpOiBudW1iZXI7XG59XG5cbi8qKlxuICogQ2xhc2UgaGlqYSBlbmNhcmdhZGEgZGUgaGFjZXIgdW5hIHN1bWEgZGUgbG9zIGVsZW1lbnRvcyBkZSB1biBhcnJheVxuICovXG5leHBvcnQgY2xhc3MgQWRkUmVkdWNlIGV4dGVuZHMgUmVkdWNlIHtcbiAgY29uc3RydWN0b3IocHJvdGVjdGVkIGlucHV0QXJyYXk6IG51bWJlcltdKSB7XG4gICAgc3VwZXIoaW5wdXRBcnJheSk7XG4gIH1cblxuICAvKipcbiAgICogU3VtYSBkZSBkb3MgZWxlbWVudG9zXG4gICAqIEBwYXJhbSB7bnVtYmVyfSBhIFxuICAgKiBAcGFyYW0ge251bWJlcn0gYiBcbiAgICogQHJldHVybnMge251bWJlcn1cbiAgICovXG4gIGFkZChhOiBudW1iZXIsIGI6bnVtYmVyKSB7XG4gICAgcmV0dXJuIGErYjtcbiAgfVxuXG4gIC8vIGFkZFJlZHVjZShpbmljaWFsOiBudW1iZXIpOiBudW1iZXIge1xuICAvLyAgIGxldCByZXN1bHQgPSBpbmljaWFsICE9PSB1bmRlZmluZWQgPyBpbmljaWFsIDogdGhpcy5pbnB1dEFycmF5WzBdO1xuXG4gIC8vICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLmlucHV0QXJyYXkubGVuZ3RoOyBpKyspIHtcbiAgLy8gICAgIHJlc3VsdCA9IHRoaXMuYWRkKHJlc3VsdCwgdGhpcy5pbnB1dEFycmF5W2ldKTtcbiAgLy8gICB9XG4gIC8vICAgdGhpcy5yZXN1bHQgPSByZXN1bHQ7XG4gIC8vICAgcmV0dXJuIHJlc3VsdDtcbiAgLy8gfVxuXG4gIC8qKlxuICAgKiBNw6l0b2RvIEhvY2tcbiAgICogQHJldHVybnMge3N0cmluZ31cbiAgICovXG4gIGFmdGVyQWRkUmVkdWNlKCkge1xuICAgIHJldHVybiAnVmVjdG9yIHJlZHVjaWRvIHBvciBzdW1hJztcbiAgfVxufVxuXG5cbiJdfQ==
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3Nlcmdpby9Eb2N1bWVudG9zLzPCuiBJbmZvLzLCuiBDdWF0cmkvRFNJL21vZDIvc3JjL1RlbXBsYXRlTWV0aG9kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJhQUFBOzs7Ozs7OztBQVFHLEcseXhOQUt5Qjt3T0FINUI7O0FBRUcsR0FDSCxLQUFzQixDQUFBLE1BQU0sQ0FFMUIsV0FBQSxDQUFzQixVQUF0QixDQUEwQywrQ0FBcEIsS0FBQSxVQUFBLENBQUEsVUFBQSxDQUNyQixDQUVEOztBQUVHLE9BQ0ksR0FBRyxFQUFBLCtDQUNSLEtBQUssTUFBTCxDQUFjLEtBQUssU0FBTCxDQUFlLENBQWYsQ0FBZCxDQURRLHVCQUdSLEtBQUssY0FBTCxHQUNELENBRUQ7OztBQUdHLE9BQ0gsU0FBUyxFQUFBLCtDQUNQLE1BQU8sTUFBSyxNQUFaLENBQ0QsQ0FFRDs7O0FBR0csT0FDSCxRQUFRLEVBQUEsK0NBQ04sTUFBTyxNQUFLLFVBQVosQ0FDRCxDQUVEOzs7O0FBSUcsT0FDSCxTQUFTLENBQUMsT0FBRCxDQUFnQix3QkFDdkIsR0FBSSxDQUFBLE1BQU0seUJBQUcsT0FBTyxHQUFLLFNBQVosNEJBQXdCLE9BQXhCLDZCQUFrQyxLQUFLLFVBQUwsQ0FBZ0IsQ0FBaEIsQ0FBbEMsQ0FBSCxDQUFWLENBRHVCLHVCQUd2QixJQUFLLEdBQUksQ0FBQSxDQUFDLHlCQUFHLENBQUgsQ0FBVixDQUFnQixDQUFDLENBQUcsS0FBSyxVQUFMLENBQWdCLE1BQXBDLENBQTRDLENBQUMsRUFBN0MsQ0FBaUQseUJBQy9DLE1BQU0sQ0FBRyxLQUFLLEdBQUwsQ0FBUyxNQUFULENBQWlCLEtBQUssVUFBTCxDQUFnQixDQUFoQixDQUFqQixDQUFULENBQ0QsQ0FMc0Isd0JBT3ZCLE1BQU8sQ0FBQSxNQUFQLENBQ0QsQ0EzQ3lCLEMsd0JBQTVCLE9BQUEsQ0FBQSxNQUFBLENBQUEsTUFBQSxDQTBEQTs7QUFFRyxHQUNILEtBQWEsQ0FBQSxTQUFiLFFBQStCLENBQUEsTUFBTSxDQUNuQyxXQUFBLENBQXNCLFVBQXRCLENBQTBDLGdEQUN4QyxNQUFNLFVBQU4sRUFEd0Msd0JBQXBCLEtBQUEsVUFBQSxDQUFBLFVBQUEsQ0FFckIsQ0FFRDs7Ozs7QUFLRyxPQUNILEdBQUcsQ0FBQyxDQUFELENBQVksQ0FBWixDQUFvQixnREFDckIsTUFBTyxDQUFBLENBQUMsQ0FBQyxDQUFULENBQ0QsQ0FFRDtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7OztBQUdHLE9BQ0gsY0FBYyxFQUFBLGdEQUNaLE1BQU8sMEJBQVAsQ0FDRCxDQS9Ca0MsQyx3QkFBckMsT0FBQSxDQUFBLFNBQUEsQ0FBQSxTQUFBLEMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFBhdHLDs24gVGVtcGxhdGUgTWV0aG9kIChDb21wb3J0YW1pZW50bylcbiAqIFBlcm1pdGUgZGVmaW5pciB1biBlc3F1ZWxldG8gYWxnb3LDrXRtaWNvIGVuIHVuYSBzdXBlcmNsYXNlLCBkZSBtb2RvIHF1ZVxuICogYXF1ZWxsYXMgc3ViY2xhc2VzIHF1ZSBleHRpZW5kYW4gZWwgY29tcG9ydGFtaWVudG8gZGUgZGljaG8gZXNxdWVsZXRvIHB1ZWRhblxuICogc29icmVlc2NyaWJpciBhbGd1bm9zIHBhc29zIGRlbCBhbGdvcsOtdG1vIHNpbiBtb2RpZmljYXIgc3UgZXN0cnVjdHVyYSBiYXNlXG4gKiBcbiAqIFZlbnRhamFzIC0tPiBSZXNwZXRhIE9wZW4tY2xvc2VkXG4gKiBEZXN0ZW50YWphcyAtLT4gTm8gcmVzcGV0YSBMaXNrb3YgU3Vic3RpdHV0aW9uXG4gKi9cblxuLyoqXG4gKiBDbGFzZSBBYnN0cmFjdGEgZG9uZGUgc2UgZGVmaW5lIGVsIG1ldG9kbyBkZSBwbGFudGlsbGFcbiAqL1xuZXhwb3J0IGFic3RyYWN0IGNsYXNzIFJlZHVjZSB7XG4gIHByb3RlY3RlZCByZXN1bHQ6IG51bWJlcjtcbiAgY29uc3RydWN0b3IocHJvdGVjdGVkIGlucHV0QXJyYXk6IG51bWJlcltdKSB7XG4gIH1cblxuICAvKipcbiAgICogTcOpdG9kbyBkZSBwbGFudGlsbGFcbiAgICovXG4gIHB1YmxpYyBydW4oKSB7XG4gICAgdGhpcy5yZXN1bHQgPSB0aGlzLmFkZFJlZHVjZSgwKTtcblxuICAgIHRoaXMuYWZ0ZXJBZGRSZWR1Y2UoKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBPYnRlbmVyIGVsIHJlc3VsdGFkbyBkZSByZWR1Y2VcbiAgICogQHJldHVybnMge3N0cmluZ31cbiAgICovXG4gIGdldFJlc3VsdCgpIHtcbiAgICByZXR1cm4gdGhpcy5yZXN1bHQ7XG4gIH1cblxuICAvKipcbiAgICogT2J0bmVyIGVsIGFycmF5IGRlIGVudHJhZGFcbiAgICogQHJldHVybnMge251bWJlcltdfVxuICAgKi9cbiAgZ2V0QXJyYXkoKSB7XG4gICAgcmV0dXJuIHRoaXMuaW5wdXRBcnJheTtcbiAgfVxuXG4gIC8qKlxuICAgKiBNw6l0b2RvIEVuY2FyZ2FkbyBkZSBhcGxpY2FyIGVsIGFkZFJlZHVjZVxuICAgKiBAcGFyYW0ge251bWJlcn0gaW5pY2lhbCBwb3NpY2nDs24gaW5pY2lhbFxuICAgKiBAcmV0dXJucyB7bnVtYmVyfVxuICAgKi9cbiAgYWRkUmVkdWNlKGluaWNpYWw6IG51bWJlcik6IG51bWJlciB7XG4gICAgbGV0IHJlc3VsdCA9IGluaWNpYWwgIT09IHVuZGVmaW5lZCA/IGluaWNpYWwgOiB0aGlzLmlucHV0QXJyYXlbMF07XG5cbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMuaW5wdXRBcnJheS5sZW5ndGg7IGkrKykge1xuICAgICAgcmVzdWx0ID0gdGhpcy5hZGQocmVzdWx0LCB0aGlzLmlucHV0QXJyYXlbaV0pO1xuICAgIH1cblxuICAgIHJldHVybiByZXN1bHQ7XG4gIH1cblxuICAvKipcbiAgICogSG9ja1xuICAgKi9cbiAgYWJzdHJhY3QgYWZ0ZXJBZGRSZWR1Y2UoKTogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBNw6l0b2RvIGFic3RhY3RvIGEgZGVmaW5pciBlbiBsYXMgY2xhc2VzIGhpamFzXG4gICAqIEBwYXJhbSB7bnVtYmVyfSBhXG4gICAqIEBwYXJhbSB7bnVtYmVyfSBiIFxuICAgKi9cbiAgYWJzdHJhY3QgYWRkKGE6IG51bWJlciwgYjpudW1iZXIpOiBudW1iZXI7XG59XG5cbi8qKlxuICogQ2xhc2UgaGlqYSBlbmNhcmdhZGEgZGUgaGFjZXIgdW5hIHN1bWEgZGUgbG9zIGVsZW1lbnRvcyBkZSB1biBhcnJheVxuICovXG5leHBvcnQgY2xhc3MgQWRkUmVkdWNlIGV4dGVuZHMgUmVkdWNlIHtcbiAgY29uc3RydWN0b3IocHJvdGVjdGVkIGlucHV0QXJyYXk6IG51bWJlcltdKSB7XG4gICAgc3VwZXIoaW5wdXRBcnJheSk7XG4gIH1cblxuICAvKipcbiAgICogU3VtYSBkZSBkb3MgZWxlbWVudG9zXG4gICAqIEBwYXJhbSB7bnVtYmVyfSBhIFxuICAgKiBAcGFyYW0ge251bWJlcn0gYiBcbiAgICogQHJldHVybnMge251bWJlcn1cbiAgICovXG4gIGFkZChhOiBudW1iZXIsIGI6bnVtYmVyKSB7XG4gICAgcmV0dXJuIGErYjtcbiAgfVxuXG4gIC8vIGFkZFJlZHVjZShpbmljaWFsOiBudW1iZXIpOiBudW1iZXIge1xuICAvLyAgIGxldCByZXN1bHQgPSBpbmljaWFsICE9PSB1bmRlZmluZWQgPyBpbmljaWFsIDogdGhpcy5pbnB1dEFycmF5WzBdO1xuXG4gIC8vICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLmlucHV0QXJyYXkubGVuZ3RoOyBpKyspIHtcbiAgLy8gICAgIHJlc3VsdCA9IHRoaXMuYWRkKHJlc3VsdCwgdGhpcy5pbnB1dEFycmF5W2ldKTtcbiAgLy8gICB9XG4gIC8vICAgdGhpcy5yZXN1bHQgPSByZXN1bHQ7XG4gIC8vICAgcmV0dXJuIHJlc3VsdDtcbiAgLy8gfVxuXG4gIC8qKlxuICAgKiBNw6l0b2RvIEhvY2tcbiAgICogQHJldHVybnMge3N0cmluZ31cbiAgICovXG4gIGFmdGVyQWRkUmVkdWNlKCkge1xuICAgIHJldHVybiAnVmVjdG9yIHJlZHVjaWRvIHBvciBzdW1hJztcbiAgfVxufVxuXG5cbiJdfQ==