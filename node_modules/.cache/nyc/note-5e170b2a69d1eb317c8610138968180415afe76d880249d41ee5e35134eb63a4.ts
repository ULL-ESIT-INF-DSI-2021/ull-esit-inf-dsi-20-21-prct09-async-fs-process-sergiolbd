"use strict";function cov_1erevzyl7j(){var path="/home/sergio/Documentos/3\xBA Info/2\xBA Cuatri/DSI/Pr\xE1ctica-8/src/note.ts";var hash="bbb956bcf4481c9670577abff9edf8b871031c21";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/home/sergio/Documentos/3\xBA Info/2\xBA Cuatri/DSI/Pr\xE1ctica-8/src/note.ts",statementMap:{"0":{start:{line:2,column:22},end:{line:8,column:3}},"1":{start:{line:3,column:4},end:{line:3,column:33}},"2":{start:{line:3,column:26},end:{line:3,column:33}},"3":{start:{line:4,column:4},end:{line:4,column:89}},"4":{start:{line:4,column:71},end:{line:4,column:83}},"5":{start:{line:6,column:4},end:{line:6,column:33}},"6":{start:{line:6,column:26},end:{line:6,column:33}},"7":{start:{line:7,column:4},end:{line:7,column:17}},"8":{start:{line:9,column:25},end:{line:13,column:2}},"9":{start:{line:10,column:4},end:{line:10,column:72}},"10":{start:{line:12,column:4},end:{line:12,column:21}},"11":{start:{line:14,column:19},end:{line:20,column:1}},"12":{start:{line:15,column:4},end:{line:15,column:42}},"13":{start:{line:15,column:31},end:{line:15,column:42}},"14":{start:{line:16,column:17},end:{line:16,column:19}},"15":{start:{line:17,column:4},end:{line:17,column:141}},"16":{start:{line:17,column:21},end:{line:17,column:141}},"17":{start:{line:17,column:40},end:{line:17,column:141}},"18":{start:{line:17,column:109},end:{line:17,column:141}},"19":{start:{line:18,column:4},end:{line:18,column:36}},"20":{start:{line:19,column:4},end:{line:19,column:18}},"21":{start:{line:21,column:0},end:{line:21,column:62}},"22":{start:{line:22,column:0},end:{line:22,column:30}},"23":{start:{line:23,column:11},end:{line:23,column:38}},"24":{start:{line:24,column:14},end:{line:24,column:30}},"25":{start:{line:28,column:14},end:{line:28,column:28}},"26":{start:{line:29,column:20},end:{line:29,column:36}},"27":{start:{line:38,column:8},end:{line:40,column:9}},"28":{start:{line:39,column:12},end:{line:39,column:58}},"29":{start:{line:48,column:8},end:{line:50,column:9}},"30":{start:{line:49,column:12},end:{line:49,column:59}},"31":{start:{line:51,column:8},end:{line:51,column:41}},"32":{start:{line:59,column:21},end:{line:59,column:50}},"33":{start:{line:60,column:21},end:{line:60,column:62}},"34":{start:{line:61,column:19},end:{line:61,column:21}},"35":{start:{line:62,column:8},end:{line:78,column:9}},"36":{start:{line:63,column:12},end:{line:71,column:13}},"37":{start:{line:64,column:16},end:{line:64,column:43}},"38":{start:{line:65,column:16},end:{line:65,column:56}},"39":{start:{line:68,column:16},end:{line:68,column:45}},"40":{start:{line:69,column:16},end:{line:69,column:57}},"41":{start:{line:70,column:16},end:{line:70,column:76}},"42":{start:{line:74,column:12},end:{line:74,column:71}},"43":{start:{line:75,column:12},end:{line:75,column:41}},"44":{start:{line:76,column:12},end:{line:76,column:37}},"45":{start:{line:77,column:12},end:{line:77,column:56}},"46":{start:{line:79,column:8},end:{line:79,column:20}},"47":{start:{line:89,column:21},end:{line:89,column:52}},"48":{start:{line:90,column:24},end:{line:90,column:58}},"49":{start:{line:91,column:8},end:{line:97,column:9}},"50":{start:{line:92,column:12},end:{line:92,column:41}},"51":{start:{line:93,column:12},end:{line:93,column:81}},"52":{start:{line:96,column:12},end:{line:96,column:73}},"53":{start:{line:105,column:21},end:{line:105,column:52}},"54":{start:{line:106,column:8},end:{line:112,column:9}},"55":{start:{line:107,column:12},end:{line:107,column:28}},"56":{start:{line:108,column:12},end:{line:108,column:56}},"57":{start:{line:111,column:12},end:{line:111,column:73}},"58":{start:{line:120,column:21},end:{line:120,column:39}},"59":{start:{line:121,column:21},end:{line:121,column:23}},"60":{start:{line:122,column:8},end:{line:135,column:9}},"61":{start:{line:123,column:27},end:{line:123,column:47}},"62":{start:{line:124,column:12},end:{line:124,column:38}},"63":{start:{line:125,column:12},end:{line:130,column:15}},"64":{start:{line:126,column:29},end:{line:126,column:57}},"65":{start:{line:127,column:34},end:{line:127,column:61}},"66":{start:{line:128,column:16},end:{line:128,column:43}},"67":{start:{line:129,column:16},end:{line:129,column:67}},"68":{start:{line:133,column:12},end:{line:133,column:49}},"69":{start:{line:134,column:12},end:{line:134,column:51}},"70":{start:{line:136,column:8},end:{line:136,column:20}},"71":{start:{line:145,column:21},end:{line:145,column:52}},"72":{start:{line:146,column:21},end:{line:146,column:23}},"73":{start:{line:147,column:8},end:{line:157,column:9}},"74":{start:{line:148,column:25},end:{line:148,column:46}},"75":{start:{line:149,column:30},end:{line:149,column:57}},"76":{start:{line:150,column:12},end:{line:150,column:55}},"77":{start:{line:151,column:12},end:{line:151,column:46}},"78":{start:{line:152,column:12},end:{line:152,column:62}},"79":{start:{line:155,column:12},end:{line:155,column:41}},"80":{start:{line:156,column:12},end:{line:156,column:50}},"81":{start:{line:158,column:8},end:{line:158,column:20}},"82":{start:{line:166,column:8},end:{line:182,column:9}},"83":{start:{line:168,column:16},end:{line:168,column:50}},"84":{start:{line:169,column:16},end:{line:169,column:22}},"85":{start:{line:171,column:16},end:{line:171,column:53}},"86":{start:{line:172,column:16},end:{line:172,column:22}},"87":{start:{line:174,column:16},end:{line:174,column:52}},"88":{start:{line:175,column:16},end:{line:175,column:22}},"89":{start:{line:177,column:16},end:{line:177,column:51}},"90":{start:{line:178,column:16},end:{line:178,column:22}},"91":{start:{line:180,column:16},end:{line:180,column:52}},"92":{start:{line:181,column:16},end:{line:181,column:22}},"93":{start:{line:185,column:0},end:{line:185,column:36}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:2,column:74},end:{line:2,column:75}},loc:{start:{line:2,column:96},end:{line:5,column:1}},line:2},"1":{name:"(anonymous_1)",decl:{start:{line:4,column:58},end:{line:4,column:59}},loc:{start:{line:4,column:69},end:{line:4,column:85}},line:4},"2":{name:"(anonymous_2)",decl:{start:{line:5,column:6},end:{line:5,column:7}},loc:{start:{line:5,column:28},end:{line:8,column:1}},line:5},"3":{name:"(anonymous_3)",decl:{start:{line:9,column:80},end:{line:9,column:81}},loc:{start:{line:9,column:95},end:{line:11,column:1}},line:9},"4":{name:"(anonymous_4)",decl:{start:{line:11,column:5},end:{line:11,column:6}},loc:{start:{line:11,column:20},end:{line:13,column:1}},line:11},"5":{name:"(anonymous_5)",decl:{start:{line:14,column:50},end:{line:14,column:51}},loc:{start:{line:14,column:65},end:{line:20,column:1}},line:14},"6":{name:"(anonymous_6)",decl:{start:{line:37,column:4},end:{line:37,column:5}},loc:{start:{line:37,column:18},end:{line:41,column:5}},line:37},"7":{name:"(anonymous_7)",decl:{start:{line:47,column:4},end:{line:47,column:5}},loc:{start:{line:47,column:29},end:{line:52,column:5}},line:47},"8":{name:"(anonymous_8)",decl:{start:{line:58,column:4},end:{line:58,column:5}},loc:{start:{line:58,column:19},end:{line:80,column:5}},line:58},"9":{name:"(anonymous_9)",decl:{start:{line:88,column:4},end:{line:88,column:5}},loc:{start:{line:88,column:34},end:{line:98,column:5}},line:88},"10":{name:"(anonymous_10)",decl:{start:{line:104,column:4},end:{line:104,column:5}},loc:{start:{line:104,column:24},end:{line:113,column:5}},line:104},"11":{name:"(anonymous_11)",decl:{start:{line:119,column:4},end:{line:119,column:5}},loc:{start:{line:119,column:15},end:{line:137,column:5}},line:119},"12":{name:"(anonymous_12)",decl:{start:{line:125,column:27},end:{line:125,column:28}},loc:{start:{line:125,column:37},end:{line:130,column:13}},line:125},"13":{name:"(anonymous_13)",decl:{start:{line:144,column:4},end:{line:144,column:5}},loc:{start:{line:144,column:22},end:{line:159,column:5}},line:144},"14":{name:"(anonymous_14)",decl:{start:{line:165,column:4},end:{line:165,column:5}},loc:{start:{line:165,column:29},end:{line:183,column:5}},line:165}},branchMap:{"0":{loc:{start:{line:2,column:22},end:{line:8,column:3}},type:"binary-expr",locations:[{start:{line:2,column:23},end:{line:2,column:27}},{start:{line:2,column:31},end:{line:2,column:51}},{start:{line:2,column:57},end:{line:8,column:2}}],line:2},"1":{loc:{start:{line:2,column:57},end:{line:8,column:2}},type:"cond-expr",locations:[{start:{line:2,column:74},end:{line:5,column:1}},{start:{line:5,column:6},end:{line:8,column:1}}],line:2},"2":{loc:{start:{line:3,column:4},end:{line:3,column:33}},type:"if",locations:[{start:{line:3,column:4},end:{line:3,column:33}},{start:{line:3,column:4},end:{line:3,column:33}}],line:3},"3":{loc:{start:{line:6,column:4},end:{line:6,column:33}},type:"if",locations:[{start:{line:6,column:4},end:{line:6,column:33}},{start:{line:6,column:4},end:{line:6,column:33}}],line:6},"4":{loc:{start:{line:9,column:25},end:{line:13,column:2}},type:"binary-expr",locations:[{start:{line:9,column:26},end:{line:9,column:30}},{start:{line:9,column:34},end:{line:9,column:57}},{start:{line:9,column:63},end:{line:13,column:1}}],line:9},"5":{loc:{start:{line:9,column:63},end:{line:13,column:1}},type:"cond-expr",locations:[{start:{line:9,column:80},end:{line:11,column:1}},{start:{line:11,column:5},end:{line:13,column:1}}],line:9},"6":{loc:{start:{line:14,column:19},end:{line:20,column:1}},type:"binary-expr",locations:[{start:{line:14,column:20},end:{line:14,column:24}},{start:{line:14,column:28},end:{line:14,column:45}},{start:{line:14,column:50},end:{line:20,column:1}}],line:14},"7":{loc:{start:{line:15,column:4},end:{line:15,column:42}},type:"if",locations:[{start:{line:15,column:4},end:{line:15,column:42}},{start:{line:15,column:4},end:{line:15,column:42}}],line:15},"8":{loc:{start:{line:15,column:8},end:{line:15,column:29}},type:"binary-expr",locations:[{start:{line:15,column:8},end:{line:15,column:11}},{start:{line:15,column:15},end:{line:15,column:29}}],line:15},"9":{loc:{start:{line:17,column:4},end:{line:17,column:141}},type:"if",locations:[{start:{line:17,column:4},end:{line:17,column:141}},{start:{line:17,column:4},end:{line:17,column:141}}],line:17},"10":{loc:{start:{line:17,column:40},end:{line:17,column:141}},type:"if",locations:[{start:{line:17,column:40},end:{line:17,column:141}},{start:{line:17,column:40},end:{line:17,column:141}}],line:17},"11":{loc:{start:{line:17,column:44},end:{line:17,column:107}},type:"binary-expr",locations:[{start:{line:17,column:44},end:{line:17,column:59}},{start:{line:17,column:63},end:{line:17,column:107}}],line:17},"12":{loc:{start:{line:38,column:8},end:{line:40,column:9}},type:"if",locations:[{start:{line:38,column:8},end:{line:40,column:9}},{start:{line:38,column:8},end:{line:40,column:9}}],line:38},"13":{loc:{start:{line:48,column:8},end:{line:50,column:9}},type:"if",locations:[{start:{line:48,column:8},end:{line:50,column:9}},{start:{line:48,column:8},end:{line:50,column:9}}],line:48},"14":{loc:{start:{line:62,column:8},end:{line:78,column:9}},type:"if",locations:[{start:{line:62,column:8},end:{line:78,column:9}},{start:{line:62,column:8},end:{line:78,column:9}}],line:62},"15":{loc:{start:{line:63,column:12},end:{line:71,column:13}},type:"if",locations:[{start:{line:63,column:12},end:{line:71,column:13}},{start:{line:63,column:12},end:{line:71,column:13}}],line:63},"16":{loc:{start:{line:91,column:8},end:{line:97,column:9}},type:"if",locations:[{start:{line:91,column:8},end:{line:97,column:9}},{start:{line:91,column:8},end:{line:97,column:9}}],line:91},"17":{loc:{start:{line:106,column:8},end:{line:112,column:9}},type:"if",locations:[{start:{line:106,column:8},end:{line:112,column:9}},{start:{line:106,column:8},end:{line:112,column:9}}],line:106},"18":{loc:{start:{line:122,column:8},end:{line:135,column:9}},type:"if",locations:[{start:{line:122,column:8},end:{line:135,column:9}},{start:{line:122,column:8},end:{line:135,column:9}}],line:122},"19":{loc:{start:{line:147,column:8},end:{line:157,column:9}},type:"if",locations:[{start:{line:147,column:8},end:{line:157,column:9}},{start:{line:147,column:8},end:{line:157,column:9}}],line:147},"20":{loc:{start:{line:166,column:8},end:{line:182,column:9}},type:"switch",locations:[{start:{line:167,column:12},end:{line:169,column:22}},{start:{line:170,column:12},end:{line:172,column:22}},{start:{line:173,column:12},end:{line:175,column:22}},{start:{line:176,column:12},end:{line:178,column:22}},{start:{line:179,column:12},end:{line:181,column:22}}],line:166}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0},b:{"0":[0,0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0,0],"5":[0,0],"6":[0,0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0,0,0,0]},inputSourceMap:{version:3,file:"/home/sergio/Documentos/3\xBA Info/2\xBA Cuatri/DSI/Pr\xE1ctica-8/src/note.ts",sources:["/home/sergio/Documentos/3\xBA Info/2\xBA Cuatri/DSI/Pr\xE1ctica-8/src/note.ts"],names:[],mappings:"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",sourcesContent:["import * as fs from 'fs';\nconst chalk = require('chalk');\nimport {note} from './types';\n\n/**\n * Constantes que usadas con chalk para dar color a mensajes de error e informativos\n */\nconst error = chalk.bold.red;\nconst informative = chalk.bold.green;\n\n/**\n * Clase NoteInstance\n */\nexport class NoteInstance {\n  /**\n   * Atributo privado est\xE1tico para almacenar la \xFAnica instancia\n   * que va a tener dicha clase\n   */\n  private static noteInstance: NoteInstance;\n\n  /**\n   * Constructor privado para que no se pueda invocar fuera de la clase\n   */\n  private constructor() {\n    if (fs.existsSync('./Note/')) {\n      fs.mkdirSync(`./Notes/`, {recursive: true});\n    }\n  }\n\n  /**\n   * M\xE9todo encargado de comprobar que solo se genera una \xFAnica\n   * instancia de la clase\n   * @returns {NoteInstance} \xDAnica instancia de la clase\n   */\n  public static getNoteInstance(): NoteInstance {\n    if (!NoteInstance.noteInstance) {\n      NoteInstance.noteInstance = new NoteInstance();\n    }\n    return NoteInstance.noteInstance;\n  }\n\n  /**\n   * M\xE9todo encargado de a\xF1adir una nota a la base de datos de notas\n   * @param {note} nota Nota a a\xF1adir\n   * @returns {string} Cadenas a mostrar por pantalla se retornan para hacer test\n   */\n  addNotes(nota: note) {\n    const data = JSON.stringify(nota, null, 2);\n    const ruta: string = `./Notes/${nota.user}/${nota.title}.json`;\n    let test: string = '';\n    if (fs.existsSync(`./Notes/${nota.user}/`)) {\n      if (fs.existsSync(ruta)) {\n        test = 'Note title taken!';\n        console.log(error('Note title taken!'));\n      } else {\n        fs.writeFileSync(ruta, data);\n        test = `New note added in ${nota.user}!`;\n        console.log(informative(`New note added in ${nota.user}!`));\n      }\n    } else {\n      fs.mkdirSync(`./Notes/${nota.user}/`, {recursive: true});\n      fs.writeFileSync(ruta, data);\n      test = 'New note added!';\n      console.log(informative('New note added!'));\n    }\n    return test;\n  }\n\n  /**\n   * M\xE9todo encargado realizar una modificaci\xF3n en la base de datos\n   * @param {string} user Usuario\n   * @param {string} title Titulo de la nota\n   * @param {string} modify Modificaci\xF3n\n   * @param {string} typemodify Tipo de modificaci\xF3n (Rename | append)\n   */\n  modify(user:string, title: string, newtitle: string) {\n    const ruta: string = `./Notes/${user}/${title}.json`;\n    const newruta: string = `./Notes/${user}/${newtitle}.json`;\n    if (fs.existsSync(ruta)) {\n      fs.renameSync(ruta, newruta);\n      console.log(informative(`${title}.json rename to ${newtitle}.json`));\n    } else {\n      console.log(error('You cannot modify a non-existent note!'));\n    }\n  }\n\n  /**\n   * M\xE9todo encargado eliminar una nota de un determinado usuario\n   * @param {string} user Usuario\n   * @param {string} title T\xEDtulo\n   */\n  remove(user: string, title: string) {\n    const ruta: string = `./Notes/${user}/${title}.json`;\n    if (fs.existsSync(ruta)) {\n      fs.rmSync(ruta);\n      console.log(informative(`Remove ${title}`));\n    } else {\n      console.log(error('You cannot remove a non-existent note!'));\n    }\n  }\n\n  /**\n   * M\xE9todo encargado de listar los t\xEDtulos de la notas de un determinado user\n   * @param {string} user Usuario\n   * @returns {string[]} Array que almacena datos mostrados por consola para hacer test\n   */\n  list(user: string) {\n    const ruta: string = `./Notes/${user}/`;\n    const test: string[] = [];\n    if (fs.existsSync(ruta)) {\n      const titles = fs.readdirSync(ruta);\n      console.log('Your Notes');\n      titles.forEach((note) => {\n        const text = fs.readFileSync(ruta + note);\n        const titleBody = JSON.parse(text.toString());\n        test.push(titleBody.title);\n        this.colorsprint(titleBody.color, titleBody.title);\n      });\n    } else {\n      test.push('This user has no notes!');\n      console.log('This user has no notes!');\n    }\n    return test;\n  }\n\n  /**\n   * M\xE9todo encargado de leer el cuerpo de una determinada nota\n   * @param {string} user Usuario\n   * @param {string} title T\xEDtulo de la nota\n   * @returns {string[]} Array que almacena datos mostrados por consola para hacer test\n   */\n  read(user: string, title: string) {\n    const ruta: string = `./Notes/${user}/${title}.json`;\n    const test: string[] = [];\n    if (fs.existsSync(ruta)) {\n      const text = fs.readFileSync(ruta);\n      const titleBody = JSON.parse(text.toString());\n      test.push(titleBody.title, titleBody.body);\n      console.log(`${titleBody.title}`);\n      this.colorsprint(titleBody.color, titleBody.body);\n    } else {\n      test.push('Note not found!');\n      console.log(error('Note not found!'));\n    }\n    return test;\n  }\n\n  /**\n   * M\xE9todo usa chalk para determinar el color de la nota y mostrar por pantalla con el color\n   * @param {string} color Color\n   * @param {string} text T\xEDtulo\n   */\n  colorsprint(color: string, text: string) {\n    switch (color) {\n      case 'red': console.log(chalk.bold.red(text));\n        break;\n      case 'yellow': console.log(chalk.bold.yellow(text));\n        break;\n      case 'green': console.log(chalk.bold.green(text));\n        break;\n      case 'blue': console.log(chalk.bold.blue(text));\n        break;\n      default: console.log(chalk.bold.black(text));\n        break;\n    }\n  }\n}\n"]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"bbb956bcf4481c9670577abff9edf8b871031c21"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_1erevzyl7j=function(){return actualCoverage;};}return actualCoverage;}cov_1erevzyl7j();var __createBinding=(cov_1erevzyl7j().s[0]++,(cov_1erevzyl7j().b[0][0]++,this)&&(cov_1erevzyl7j().b[0][1]++,this.__createBinding)||(cov_1erevzyl7j().b[0][2]++,Object.create?(cov_1erevzyl7j().b[1][0]++,function(o,m,k,k2){cov_1erevzyl7j().f[0]++;cov_1erevzyl7j().s[1]++;if(k2===undefined){cov_1erevzyl7j().b[2][0]++;cov_1erevzyl7j().s[2]++;k2=k;}else{cov_1erevzyl7j().b[2][1]++;}cov_1erevzyl7j().s[3]++;Object.defineProperty(o,k2,{enumerable:true,get:function(){cov_1erevzyl7j().f[1]++;cov_1erevzyl7j().s[4]++;return m[k];}});}):(cov_1erevzyl7j().b[1][1]++,function(o,m,k,k2){cov_1erevzyl7j().f[2]++;cov_1erevzyl7j().s[5]++;if(k2===undefined){cov_1erevzyl7j().b[3][0]++;cov_1erevzyl7j().s[6]++;k2=k;}else{cov_1erevzyl7j().b[3][1]++;}cov_1erevzyl7j().s[7]++;o[k2]=m[k];})));var __setModuleDefault=(cov_1erevzyl7j().s[8]++,(cov_1erevzyl7j().b[4][0]++,this)&&(cov_1erevzyl7j().b[4][1]++,this.__setModuleDefault)||(cov_1erevzyl7j().b[4][2]++,Object.create?(cov_1erevzyl7j().b[5][0]++,function(o,v){cov_1erevzyl7j().f[3]++;cov_1erevzyl7j().s[9]++;Object.defineProperty(o,"default",{enumerable:true,value:v});}):(cov_1erevzyl7j().b[5][1]++,function(o,v){cov_1erevzyl7j().f[4]++;cov_1erevzyl7j().s[10]++;o["default"]=v;})));var __importStar=(cov_1erevzyl7j().s[11]++,(cov_1erevzyl7j().b[6][0]++,this)&&(cov_1erevzyl7j().b[6][1]++,this.__importStar)||(cov_1erevzyl7j().b[6][2]++,function(mod){cov_1erevzyl7j().f[5]++;cov_1erevzyl7j().s[12]++;if((cov_1erevzyl7j().b[8][0]++,mod)&&(cov_1erevzyl7j().b[8][1]++,mod.__esModule)){cov_1erevzyl7j().b[7][0]++;cov_1erevzyl7j().s[13]++;return mod;}else{cov_1erevzyl7j().b[7][1]++;}var result=(cov_1erevzyl7j().s[14]++,{});cov_1erevzyl7j().s[15]++;if(mod!=null){cov_1erevzyl7j().b[9][0]++;cov_1erevzyl7j().s[16]++;for(var k in mod){cov_1erevzyl7j().s[17]++;if((cov_1erevzyl7j().b[11][0]++,k!=="default")&&(cov_1erevzyl7j().b[11][1]++,Object.prototype.hasOwnProperty.call(mod,k))){cov_1erevzyl7j().b[10][0]++;cov_1erevzyl7j().s[18]++;__createBinding(result,mod,k);}else{cov_1erevzyl7j().b[10][1]++;}}}else{cov_1erevzyl7j().b[9][1]++;}cov_1erevzyl7j().s[19]++;__setModuleDefault(result,mod);cov_1erevzyl7j().s[20]++;return result;}));cov_1erevzyl7j().s[21]++;Object.defineProperty(exports,"__esModule",{value:true});cov_1erevzyl7j().s[22]++;exports.NoteInstance=void 0;const fs=(cov_1erevzyl7j().s[23]++,__importStar(require("fs")));const chalk=(cov_1erevzyl7j().s[24]++,require('chalk'));/**
 * Constantes que usadas con chalk para dar color a mensajes de error e informativos
 */const error=(cov_1erevzyl7j().s[25]++,chalk.bold.red);const informative=(cov_1erevzyl7j().s[26]++,chalk.bold.green);/**
 * Clase NoteInstance
 */class NoteInstance{/**
     * Constructor privado para que no se pueda invocar fuera de la clase
     */constructor(){cov_1erevzyl7j().f[6]++;cov_1erevzyl7j().s[27]++;if(fs.existsSync('./Note/')){cov_1erevzyl7j().b[12][0]++;cov_1erevzyl7j().s[28]++;fs.mkdirSync(`./Notes/`,{recursive:true});}else{cov_1erevzyl7j().b[12][1]++;}}/**
     * Método encargado de comprobar que solo se genera una única
     * instancia de la clase
     * @returns {NoteInstance} Única instancia de la clase
     */static getNoteInstance(){cov_1erevzyl7j().f[7]++;cov_1erevzyl7j().s[29]++;if(!NoteInstance.noteInstance){cov_1erevzyl7j().b[13][0]++;cov_1erevzyl7j().s[30]++;NoteInstance.noteInstance=new NoteInstance();}else{cov_1erevzyl7j().b[13][1]++;}cov_1erevzyl7j().s[31]++;return NoteInstance.noteInstance;}/**
     * Método encargado de añadir una nota a la base de datos de notas
     * @param {note} nota Nota a añadir
     * @returns {string} Cadenas a mostrar por pantalla se retornan para hacer test
     */addNotes(nota){cov_1erevzyl7j().f[8]++;const data=(cov_1erevzyl7j().s[32]++,JSON.stringify(nota,null,2));const ruta=(cov_1erevzyl7j().s[33]++,`./Notes/${nota.user}/${nota.title}.json`);let test=(cov_1erevzyl7j().s[34]++,'');cov_1erevzyl7j().s[35]++;if(fs.existsSync(`./Notes/${nota.user}/`)){cov_1erevzyl7j().b[14][0]++;cov_1erevzyl7j().s[36]++;if(fs.existsSync(ruta)){cov_1erevzyl7j().b[15][0]++;cov_1erevzyl7j().s[37]++;test='Note title taken!';cov_1erevzyl7j().s[38]++;console.log(error('Note title taken!'));}else{cov_1erevzyl7j().b[15][1]++;cov_1erevzyl7j().s[39]++;fs.writeFileSync(ruta,data);cov_1erevzyl7j().s[40]++;test=`New note added in ${nota.user}!`;cov_1erevzyl7j().s[41]++;console.log(informative(`New note added in ${nota.user}!`));}}else{cov_1erevzyl7j().b[14][1]++;cov_1erevzyl7j().s[42]++;fs.mkdirSync(`./Notes/${nota.user}/`,{recursive:true});cov_1erevzyl7j().s[43]++;fs.writeFileSync(ruta,data);cov_1erevzyl7j().s[44]++;test='New note added!';cov_1erevzyl7j().s[45]++;console.log(informative('New note added!'));}cov_1erevzyl7j().s[46]++;return test;}/**
     * Método encargado realizar una modificación en la base de datos
     * @param {string} user Usuario
     * @param {string} title Titulo de la nota
     * @param {string} modify Modificación
     * @param {string} typemodify Tipo de modificación (Rename | append)
     */modify(user,title,newtitle){cov_1erevzyl7j().f[9]++;const ruta=(cov_1erevzyl7j().s[47]++,`./Notes/${user}/${title}.json`);const newruta=(cov_1erevzyl7j().s[48]++,`./Notes/${user}/${newtitle}.json`);cov_1erevzyl7j().s[49]++;if(fs.existsSync(ruta)){cov_1erevzyl7j().b[16][0]++;cov_1erevzyl7j().s[50]++;fs.renameSync(ruta,newruta);cov_1erevzyl7j().s[51]++;console.log(informative(`${title}.json rename to ${newtitle}.json`));}else{cov_1erevzyl7j().b[16][1]++;cov_1erevzyl7j().s[52]++;console.log(error('You cannot modify a non-existent note!'));}}/**
     * Método encargado eliminar una nota de un determinado usuario
     * @param {string} user Usuario
     * @param {string} title Título
     */remove(user,title){cov_1erevzyl7j().f[10]++;const ruta=(cov_1erevzyl7j().s[53]++,`./Notes/${user}/${title}.json`);cov_1erevzyl7j().s[54]++;if(fs.existsSync(ruta)){cov_1erevzyl7j().b[17][0]++;cov_1erevzyl7j().s[55]++;fs.rmSync(ruta);cov_1erevzyl7j().s[56]++;console.log(informative(`Remove ${title}`));}else{cov_1erevzyl7j().b[17][1]++;cov_1erevzyl7j().s[57]++;console.log(error('You cannot remove a non-existent note!'));}}/**
     * Método encargado de listar los títulos de la notas de un determinado user
     * @param {string} user Usuario
     * @returns {string[]} Array que almacena datos mostrados por consola para hacer test
     */list(user){cov_1erevzyl7j().f[11]++;const ruta=(cov_1erevzyl7j().s[58]++,`./Notes/${user}/`);const test=(cov_1erevzyl7j().s[59]++,[]);cov_1erevzyl7j().s[60]++;if(fs.existsSync(ruta)){cov_1erevzyl7j().b[18][0]++;const titles=(cov_1erevzyl7j().s[61]++,fs.readdirSync(ruta));cov_1erevzyl7j().s[62]++;console.log('Your Notes');cov_1erevzyl7j().s[63]++;titles.forEach(note=>{cov_1erevzyl7j().f[12]++;const text=(cov_1erevzyl7j().s[64]++,fs.readFileSync(ruta+note));const titleBody=(cov_1erevzyl7j().s[65]++,JSON.parse(text.toString()));cov_1erevzyl7j().s[66]++;test.push(titleBody.title);cov_1erevzyl7j().s[67]++;this.colorsprint(titleBody.color,titleBody.title);});}else{cov_1erevzyl7j().b[18][1]++;cov_1erevzyl7j().s[68]++;test.push('This user has no notes!');cov_1erevzyl7j().s[69]++;console.log('This user has no notes!');}cov_1erevzyl7j().s[70]++;return test;}/**
     * Método encargado de leer el cuerpo de una determinada nota
     * @param {string} user Usuario
     * @param {string} title Título de la nota
     * @returns {string[]} Array que almacena datos mostrados por consola para hacer test
     */read(user,title){cov_1erevzyl7j().f[13]++;const ruta=(cov_1erevzyl7j().s[71]++,`./Notes/${user}/${title}.json`);const test=(cov_1erevzyl7j().s[72]++,[]);cov_1erevzyl7j().s[73]++;if(fs.existsSync(ruta)){cov_1erevzyl7j().b[19][0]++;const text=(cov_1erevzyl7j().s[74]++,fs.readFileSync(ruta));const titleBody=(cov_1erevzyl7j().s[75]++,JSON.parse(text.toString()));cov_1erevzyl7j().s[76]++;test.push(titleBody.title,titleBody.body);cov_1erevzyl7j().s[77]++;console.log(`${titleBody.title}`);cov_1erevzyl7j().s[78]++;this.colorsprint(titleBody.color,titleBody.body);}else{cov_1erevzyl7j().b[19][1]++;cov_1erevzyl7j().s[79]++;test.push('Note not found!');cov_1erevzyl7j().s[80]++;console.log(error('Note not found!'));}cov_1erevzyl7j().s[81]++;return test;}/**
     * Método usa chalk para determinar el color de la nota y mostrar por pantalla con el color
     * @param {string} color Color
     * @param {string} text Título
     */colorsprint(color,text){cov_1erevzyl7j().f[14]++;cov_1erevzyl7j().s[82]++;switch(color){case'red':cov_1erevzyl7j().b[20][0]++;cov_1erevzyl7j().s[83]++;console.log(chalk.bold.red(text));cov_1erevzyl7j().s[84]++;break;case'yellow':cov_1erevzyl7j().b[20][1]++;cov_1erevzyl7j().s[85]++;console.log(chalk.bold.yellow(text));cov_1erevzyl7j().s[86]++;break;case'green':cov_1erevzyl7j().b[20][2]++;cov_1erevzyl7j().s[87]++;console.log(chalk.bold.green(text));cov_1erevzyl7j().s[88]++;break;case'blue':cov_1erevzyl7j().b[20][3]++;cov_1erevzyl7j().s[89]++;console.log(chalk.bold.blue(text));cov_1erevzyl7j().s[90]++;break;default:cov_1erevzyl7j().b[20][4]++;cov_1erevzyl7j().s[91]++;console.log(chalk.bold.black(text));cov_1erevzyl7j().s[92]++;break;}}}cov_1erevzyl7j().s[93]++;exports.NoteInstance=NoteInstance;//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=data:application/json;charset=utf-8;base64,